DoDispatchOne()
OnBeforeSave()
OnChar()
OnClose()
OnDoubleClick()
OnDwellStart()
OnKey()
OnMarginClick()
OnOpen()
OnSave()
OnSavePointLeft()
OnSavePointReached()
OnSwitchFile()
OnUpdateUI()
OnUserListSelection()
scite.MenuCommand(ANNOTATION_BOXED)
scite.MenuCommand(ANNOTATION_INDENTED)
scite.MenuCommand(ANNOTATION_STANDARD)
scite.MenuCommand(CARETSTYLE_BLOCK_AFTER)
scite.MenuCommand(CARETSTYLE_INS_MASK)
scite.MenuCommand(CARETSTYLE_OVERSTRIKE_BLOCK)
scite.MenuCommand(CARET_EVEN)
scite.MenuCommand(CARET_STRICT)
scite.MenuCommand(IDM_ABBREV)
scite.MenuCommand(IDM_ABOUT)
scite.MenuCommand(IDM_ACTIVATE)
scite.MenuCommand(IDM_ALLOWACCESS)
scite.MenuCommand(IDM_BLOCK_COMMENT)
scite.MenuCommand(IDM_BOOKMARK_CLEARALL)
scite.MenuCommand(IDM_BOOKMARK_NEXT)
scite.MenuCommand(IDM_BOOKMARK_NEXT_SELECT)
scite.MenuCommand(IDM_BOOKMARK_PREV)
scite.MenuCommand(IDM_BOOKMARK_PREV_SELECT)
scite.MenuCommand(IDM_BOOKMARK_SELECT_ALL)
scite.MenuCommand(IDM_BOOKMARK_TOGGLE)
scite.MenuCommand(IDM_BOX_COMMENT)
scite.MenuCommand(IDM_BUFFER)
scite.MenuCommand(IDM_BUFFERSEP)
scite.MenuCommand(IDM_BUILD)
scite.MenuCommand(IDM_CLEAN)
scite.MenuCommand(IDM_CLEAR)
scite.MenuCommand(IDM_CLEAROUTPUT)
scite.MenuCommand(IDM_CLOSE)
scite.MenuCommand(IDM_CLOSEALL)
scite.MenuCommand(IDM_COMPILE)
scite.MenuCommand(IDM_COMPLETE)
scite.MenuCommand(IDM_COMPLETEWORD)
scite.MenuCommand(IDM_COPY)
scite.MenuCommand(IDM_COPYASRTF)
scite.MenuCommand(IDM_COPYPATH)
scite.MenuCommand(IDM_CUT)
scite.MenuCommand(IDM_DIRECTIONDOWN)
scite.MenuCommand(IDM_DIRECTIONUP)
scite.MenuCommand(IDM_DUPLICATE)
scite.MenuCommand(IDM_ENCODING_DEFAULT)
scite.MenuCommand(IDM_ENCODING_UCOOKIE)
scite.MenuCommand(IDM_ENCODING_UCS2BE)
scite.MenuCommand(IDM_ENCODING_UCS2LE)
scite.MenuCommand(IDM_ENCODING_UTF8)
scite.MenuCommand(IDM_EOL_CONVERT)
scite.MenuCommand(IDM_EOL_CR)
scite.MenuCommand(IDM_EOL_CRLF)
scite.MenuCommand(IDM_EOL_LF)
scite.MenuCommand(IDM_EXPAND)
scite.MenuCommand(IDM_EXPAND_ENSURECHILDRENVISIBLE)
scite.MenuCommand(IDM_FILER)
scite.MenuCommand(IDM_FIND)
scite.MenuCommand(IDM_FINDINFILES)
scite.MenuCommand(IDM_FINDNEXT)
scite.MenuCommand(IDM_FINDNEXTBACK)
scite.MenuCommand(IDM_FINDNEXTBACKSEL)
scite.MenuCommand(IDM_FINDNEXTSEL)
scite.MenuCommand(IDM_FINISHEDEXECUTE)
scite.MenuCommand(IDM_FOLDMARGIN)
scite.MenuCommand(IDM_FULLSCREEN)
scite.MenuCommand(IDM_GO)
scite.MenuCommand(IDM_GOTO)
scite.MenuCommand(IDM_HELP)
scite.MenuCommand(IDM_HELP_SCITE)
scite.MenuCommand(IDM_IMPORT)
scite.MenuCommand(IDM_INCSEARCH)
scite.MenuCommand(IDM_INS_ABBREV)
scite.MenuCommand(IDM_JOIN)
scite.MenuCommand(IDM_LANGUAGE)
scite.MenuCommand(IDM_LINENUMBERMARGIN)
scite.MenuCommand(IDM_LINEREVERSE)
scite.MenuCommand(IDM_LOADSESSION)
scite.MenuCommand(IDM_LWRCASE)
scite.MenuCommand(IDM_MACROLIST)
scite.MenuCommand(IDM_MACROPLAY)
scite.MenuCommand(IDM_MACRORECORD)
scite.MenuCommand(IDM_MACROSTOPRECORD)
scite.MenuCommand(IDM_MACRO_SEP)
scite.MenuCommand(IDM_MATCHBRACE)
scite.MenuCommand(IDM_MATCHCASE)
scite.MenuCommand(IDM_MONOFONT)
scite.MenuCommand(IDM_MOVETABLEFT)
scite.MenuCommand(IDM_MOVETABRIGHT)
scite.MenuCommand(IDM_MRUFILE)
scite.MenuCommand(IDM_MRU_SEP)
scite.MenuCommand(IDM_MRU_SUB)
scite.MenuCommand(IDM_NEW)
scite.MenuCommand(IDM_NEXTFILE)
scite.MenuCommand(IDM_NEXTFILESTACK)
scite.MenuCommand(IDM_NEXTMATCHPPC)
scite.MenuCommand(IDM_NEXTMSG)
scite.MenuCommand(IDM_ONTOP)
scite.MenuCommand(IDM_OPEN)
scite.MenuCommand(IDM_OPENABBREVPROPERTIES)
scite.MenuCommand(IDM_OPENDIRECTORYPROPERTIES)
scite.MenuCommand(IDM_OPENFILESHERE)
scite.MenuCommand(IDM_OPENGLOBALPROPERTIES)
scite.MenuCommand(IDM_OPENLOCALPROPERTIES)
scite.MenuCommand(IDM_OPENLUAEXTERNALFILE)
scite.MenuCommand(IDM_OPENSELECTED)
scite.MenuCommand(IDM_OPENUSERPROPERTIES)
scite.MenuCommand(IDM_PASTE)
scite.MenuCommand(IDM_PASTEANDDOWN)
scite.MenuCommand(IDM_PREVFILE)
scite.MenuCommand(IDM_PREVFILESTACK)
scite.MenuCommand(IDM_PREVMATCHPPC)
scite.MenuCommand(IDM_PREVMSG)
scite.MenuCommand(IDM_PRINT)
scite.MenuCommand(IDM_PRINTSETUP)
scite.MenuCommand(IDM_QUIT)
scite.MenuCommand(IDM_READONLY)
scite.MenuCommand(IDM_REDO)
scite.MenuCommand(IDM_REGEXP)
scite.MenuCommand(IDM_REPLACE)
scite.MenuCommand(IDM_REVERT)
scite.MenuCommand(IDM_RUNWIN)
scite.MenuCommand(IDM_SAVE)
scite.MenuCommand(IDM_SAVEACOPY)
scite.MenuCommand(IDM_SAVEALL)
scite.MenuCommand(IDM_SAVEAS)
scite.MenuCommand(IDM_SAVEASHTML)
scite.MenuCommand(IDM_SAVEASPDF)
scite.MenuCommand(IDM_SAVEASRTF)
scite.MenuCommand(IDM_SAVEASTEX)
scite.MenuCommand(IDM_SAVEASXML)
scite.MenuCommand(IDM_SAVESESSION)
scite.MenuCommand(IDM_SELECTALL)
scite.MenuCommand(IDM_SELECTIONADDEACH)
scite.MenuCommand(IDM_SELECTIONADDNEXT)
scite.MenuCommand(IDM_SELECTION_FOR_FIND)
scite.MenuCommand(IDM_SELECTTOBRACE)
scite.MenuCommand(IDM_SELECTTONEXTMATCHPPC)
scite.MenuCommand(IDM_SELECTTOPREVMATCHPPC)
scite.MenuCommand(IDM_SELMARGIN)
scite.MenuCommand(IDM_SHOWCALLTIP)
scite.MenuCommand(IDM_SPLIT)
scite.MenuCommand(IDM_SPLITVERTICAL)
scite.MenuCommand(IDM_SRCWIN)
scite.MenuCommand(IDM_STATUSWIN)
scite.MenuCommand(IDM_STOPEXECUTE)
scite.MenuCommand(IDM_STREAM_COMMENT)
scite.MenuCommand(IDM_SWITCHPANE)
scite.MenuCommand(IDM_TABSIZE)
scite.MenuCommand(IDM_TABWIN)
scite.MenuCommand(IDM_TOGGLEOUTPUT)
scite.MenuCommand(IDM_TOGGLEPARAMETERS)
scite.MenuCommand(IDM_TOGGLE_FOLDALL)
scite.MenuCommand(IDM_TOGGLE_FOLDRECURSIVE)
scite.MenuCommand(IDM_TOOLS)
scite.MenuCommand(IDM_TOOLWIN)
scite.MenuCommand(IDM_UNDO)
scite.MenuCommand(IDM_UNSLASH)
scite.MenuCommand(IDM_UPRCASE)
scite.MenuCommand(IDM_VIEWEOL)
scite.MenuCommand(IDM_VIEWGUIDES)
scite.MenuCommand(IDM_VIEWSPACE)
scite.MenuCommand(IDM_VIEWSTATUSBAR)
scite.MenuCommand(IDM_VIEWTABBAR)
scite.MenuCommand(IDM_VIEWTOOLBAR)
scite.MenuCommand(IDM_WHOLEWORD)
scite.MenuCommand(IDM_WRAP)
scite.MenuCommand(IDM_WRAPAROUND)
scite.MenuCommand(IDM_WRAPOUTPUT)
scite.MenuCommand(INDICATOR_IME)
scite.MenuCommand(INDICATOR_IME_MAX)
scite.MenuCommand(INDIC_BOX)
scite.MenuCommand(INDIC_COMPOSITIONTHICK)
scite.MenuCommand(INDIC_DASH)
scite.MenuCommand(INDIC_DOTBOX)
scite.MenuCommand(INDIC_DOTS)
scite.MenuCommand(INDIC_GRADIENT)
scite.MenuCommand(INDIC_GRADIENTCENTRE)
scite.MenuCommand(INDIC_HIDDEN)
scite.MenuCommand(INDIC_POINT)
scite.MenuCommand(INDIC_POINTCHARACTER)
scite.MenuCommand(INDIC_ROUNDBOX)
scite.MenuCommand(INDIC_SQUIGGLELOW)
scite.MenuCommand(INDIC_SQUIGGLEPIXMAP)
scite.MenuCommand(INDIC_TEXTFORE)
scite.MenuCommand(MARKER_MAX)
scite.MenuCommand(SCEN_CHANGE)
scite.MenuCommand(SCEN_SETFOCUS)
scite.MenuCommand(SCE_BAAN_DEFINEDEF)
scite.MenuCommand(SCE_BAAN_FUNCDEF)
scite.MenuCommand(SCE_BAAN_OBJECTDEF)
scite.MenuCommand(SCE_COFFEESCRIPT_INSTANCEPROPERTY)
scite.MenuCommand(SCE_C_ESCAPESEQUENCE)
scite.MenuCommand(SCE_C_TASKMARKER)
scite.MenuCommand(SCE_ERR_ES_BLACK)
scite.MenuCommand(SCE_ERR_ES_BLUE)
scite.MenuCommand(SCE_ERR_ES_BRIGHT_BLUE)
scite.MenuCommand(SCE_ERR_ES_BRIGHT_CYAN)
scite.MenuCommand(SCE_ERR_ES_BRIGHT_GREEN)
scite.MenuCommand(SCE_ERR_ES_BRIGHT_MAGENTA)
scite.MenuCommand(SCE_ERR_ES_BRIGHT_RED)
scite.MenuCommand(SCE_ERR_ES_BROWN)
scite.MenuCommand(SCE_ERR_ES_CYAN)
scite.MenuCommand(SCE_ERR_ES_DARK_GRAY)
scite.MenuCommand(SCE_ERR_ES_GRAY)
scite.MenuCommand(SCE_ERR_ES_GREEN)
scite.MenuCommand(SCE_ERR_ES_MAGENTA)
scite.MenuCommand(SCE_ERR_ES_RED)
scite.MenuCommand(SCE_ERR_ES_WHITE)
scite.MenuCommand(SCE_ERR_ES_YELLOW)
scite.MenuCommand(SCE_FS_IDENTIFIER_C)
scite.MenuCommand(SCE_FS_OPERATOR_C)
scite.MenuCommand(SCE_FS_PREPROCESSOR_C)
scite.MenuCommand(SCE_HBA_COMMENTLINE)
scite.MenuCommand(SCE_HBA_DEFAULT)
scite.MenuCommand(SCE_HBA_IDENTIFIER)
scite.MenuCommand(SCE_HBA_NUMBER)
scite.MenuCommand(SCE_HBA_START)
scite.MenuCommand(SCE_HBA_STRING)
scite.MenuCommand(SCE_HBA_STRINGEOL)
scite.MenuCommand(SCE_HBA_WORD)
scite.MenuCommand(SCE_HB_COMMENTLINE)
scite.MenuCommand(SCE_HB_DEFAULT)
scite.MenuCommand(SCE_HB_IDENTIFIER)
scite.MenuCommand(SCE_HB_NUMBER)
scite.MenuCommand(SCE_HB_START)
scite.MenuCommand(SCE_HB_STRING)
scite.MenuCommand(SCE_HB_STRINGEOL)
scite.MenuCommand(SCE_HB_WORD)
scite.MenuCommand(SCE_HJA_COMMENT)
scite.MenuCommand(SCE_HJA_COMMENTDOC)
scite.MenuCommand(SCE_HJA_COMMENTLINE)
scite.MenuCommand(SCE_HJA_DEFAULT)
scite.MenuCommand(SCE_HJA_DOUBLESTRING)
scite.MenuCommand(SCE_HJA_KEYWORD)
scite.MenuCommand(SCE_HJA_NUMBER)
scite.MenuCommand(SCE_HJA_REGEX)
scite.MenuCommand(SCE_HJA_SINGLESTRING)
scite.MenuCommand(SCE_HJA_STRINGEOL)
scite.MenuCommand(SCE_HJA_SYMBOLS)
scite.MenuCommand(SCE_HJA_WORD)
scite.MenuCommand(SCE_HPA_COMMENTLINE)
scite.MenuCommand(SCE_HPA_NUMBER)
scite.MenuCommand(SCE_HPA_STRING)
scite.MenuCommand(SCE_HPHP_COMMENT)
scite.MenuCommand(SCE_HPHP_COMMENTLINE)
scite.MenuCommand(SCE_HPHP_HSTRING_VARIABLE)
scite.MenuCommand(SCE_HPHP_NUMBER)
scite.MenuCommand(SCE_HPHP_OPERATOR)
scite.MenuCommand(SCE_HPHP_VARIABLE)
scite.MenuCommand(SCE_HP_CHARACTER)
scite.MenuCommand(SCE_HP_CLASSNAME)
scite.MenuCommand(SCE_HP_COMMENTLINE)
scite.MenuCommand(SCE_HP_DEFAULT)
scite.MenuCommand(SCE_HP_DEFNAME)
scite.MenuCommand(SCE_HP_NUMBER)
scite.MenuCommand(SCE_HP_START)
scite.MenuCommand(SCE_HP_STRING)
scite.MenuCommand(SCE_HP_TRIPLE)
scite.MenuCommand(SCE_HP_TRIPLEDOUBLE)
scite.MenuCommand(SCE_HP_WORD)
scite.MenuCommand(SCI_START)
scite.MenuCommand(SCK_DOWN)
scite.MenuCommand(SCK_INSERT)
scite.MenuCommand(SCK_MENU)
scite.MenuCommand(SCLEX_ASM)
scite.MenuCommand(SCLEX_CSS)
scite.MenuCommand(SCLEX_D)
scite.MenuCommand(SCLEX_DATAFLEX)
scite.MenuCommand(SCLEX_F77)
scite.MenuCommand(SCLEX_FORTRAN)
scite.MenuCommand(SCLEX_HASKELL)
scite.MenuCommand(SCLEX_MYSQL)
scite.MenuCommand(SCLEX_PHPSCRIPT)
scite.MenuCommand(SCLEX_POV)
scite.MenuCommand(SCLEX_POWERSHELL)
scite.MenuCommand(SCLEX_SCRIPTOL)
scite.MenuCommand(SCLEX_SPICE)
scite.MenuCommand(SCLEX_X12)
scite.MenuCommand(SC_ALPHA_OPAQUE)
scite.MenuCommand(SC_CHARSET_ARABIC)
scite.MenuCommand(SC_CHARSET_BALTIC)
scite.MenuCommand(SC_CHARSET_CHINESEBIG5)
scite.MenuCommand(SC_CHARSET_CYRILLIC)
scite.MenuCommand(SC_CHARSET_GB2312)
scite.MenuCommand(SC_CHARSET_GREEK)
scite.MenuCommand(SC_CHARSET_HEBREW)
scite.MenuCommand(SC_CHARSET_OEM866)
scite.MenuCommand(SC_CHARSET_TURKISH)
scite.MenuCommand(SC_CHARSET_VIETNAMESE)
scite.MenuCommand(SC_FOLDLEVELBASE)
scite.MenuCommand(SC_STATUS_WARN_REGEX)
scite.MenuCommand(SC_WEIGHT_BOLD)
scite.MenuCommand(SC_WEIGHT_NORMAL)
scite.MenuCommand(SC_WEIGHT_SEMIBOLD)
scite.Open()
scite.SendEditor()
scite.SendEditor(SCI_ADDREFDOCUMENT)
scite.SendEditor(SCI_ADDSELECTION)
scite.SendEditor(SCI_ADDSTYLEDTEXT)
scite.SendEditor(SCI_ADDTABSTOP)
scite.SendEditor(SCI_ADDTEXT)
scite.SendEditor(SCI_ADDUNDOACTION)
scite.SendEditor(SCI_ALLOCATE)
scite.SendEditor(SCI_ALLOCATEEXTENDEDSTYLES)
scite.SendEditor(SCI_ALLOCATELINECHARACTERINDEX)
scite.SendEditor(SCI_ANNOTATIONCLEARALL)
scite.SendEditor(SCI_ANNOTATIONGETLINES)
scite.SendEditor(SCI_ANNOTATIONGETSTYLE)
scite.SendEditor(SCI_ANNOTATIONGETSTYLEOFFSET)
scite.SendEditor(SCI_ANNOTATIONGETSTYLES)
scite.SendEditor(SCI_ANNOTATIONGETTEXT)
scite.SendEditor(SCI_ANNOTATIONGETVISIBLE)
scite.SendEditor(SCI_ANNOTATIONSETSTYLE)
scite.SendEditor(SCI_ANNOTATIONSETSTYLEOFFSET)
scite.SendEditor(SCI_ANNOTATIONSETSTYLES)
scite.SendEditor(SCI_ANNOTATIONSETTEXT)
scite.SendEditor(SCI_ANNOTATIONSETVISIBLE)
scite.SendEditor(SCI_APPENDTEXT)
scite.SendEditor(SCI_ASSIGNCMDKEY)
scite.SendEditor(SCI_AUTOCACTIVE)
scite.SendEditor(SCI_AUTOCCANCEL)
scite.SendEditor(SCI_AUTOCCOMPLETE)
scite.SendEditor(SCI_AUTOCGETAUTOHIDE)
scite.SendEditor(SCI_AUTOCGETCANCELATSTART)
scite.SendEditor(SCI_AUTOCGETCASEINSENSITIVEBEHAVIOUR)
scite.SendEditor(SCI_AUTOCGETCHOOSESINGLE)
scite.SendEditor(SCI_AUTOCGETCURRENT)
scite.SendEditor(SCI_AUTOCGETCURRENTTEXT)
scite.SendEditor(SCI_AUTOCGETDROPRESTOFWORD)
scite.SendEditor(SCI_AUTOCGETIGNORECASE)
scite.SendEditor(SCI_AUTOCGETMAXHEIGHT)
scite.SendEditor(SCI_AUTOCGETMAXWIDTH)
scite.SendEditor(SCI_AUTOCGETMULTI)
scite.SendEditor(SCI_AUTOCGETORDER)
scite.SendEditor(SCI_AUTOCGETSEPARATOR)
scite.SendEditor(SCI_AUTOCGETTYPESEPARATOR)
scite.SendEditor(SCI_AUTOCPOSSTART)
scite.SendEditor(SCI_AUTOCSELECT)
scite.SendEditor(SCI_AUTOCSETAUTOHIDE)
scite.SendEditor(SCI_AUTOCSETCANCELATSTART)
scite.SendEditor(SCI_AUTOCSETCASEINSENSITIVEBEHAVIOUR)
scite.SendEditor(SCI_AUTOCSETCHOOSESINGLE)
scite.SendEditor(SCI_AUTOCSETDROPRESTOFWORD)
scite.SendEditor(SCI_AUTOCSETFILLUPS)
scite.SendEditor(SCI_AUTOCSETIGNORECASE)
scite.SendEditor(SCI_AUTOCSETMAXHEIGHT)
scite.SendEditor(SCI_AUTOCSETMAXWIDTH)
scite.SendEditor(SCI_AUTOCSETMULTI)
scite.SendEditor(SCI_AUTOCSETORDER)
scite.SendEditor(SCI_AUTOCSETSEPARATOR)
scite.SendEditor(SCI_AUTOCSETTYPESEPARATOR)
scite.SendEditor(SCI_AUTOCSHOW)
scite.SendEditor(SCI_AUTOCSTOPS)
scite.SendEditor(SCI_BACKTAB)
scite.SendEditor(SCI_BEGINUNDOACTION)
scite.SendEditor(SCI_BRACEBADLIGHT)
scite.SendEditor(SCI_BRACEBADLIGHTINDICATOR)
scite.SendEditor(SCI_BRACEHIGHLIGHT)
scite.SendEditor(SCI_BRACEHIGHLIGHTINDICATOR)
scite.SendEditor(SCI_BRACEMATCH)
scite.SendEditor(SCI_BRACEMATCHNEXT)
scite.SendEditor(SCI_CALLTIPACTIVE)
scite.SendEditor(SCI_CALLTIPCANCEL)
scite.SendEditor(SCI_CALLTIPPOSSTART)
scite.SendEditor(SCI_CALLTIPSETBACK)
scite.SendEditor(SCI_CALLTIPSETFORE)
scite.SendEditor(SCI_CALLTIPSETFOREHLT)
scite.SendEditor(SCI_CALLTIPSETHLT)
scite.SendEditor(SCI_CALLTIPSETPOSITION)
scite.SendEditor(SCI_CALLTIPSETPOSSTART)
scite.SendEditor(SCI_CALLTIPSHOW)
scite.SendEditor(SCI_CALLTIPUSESTYLE)
scite.SendEditor(SCI_CANCEL)
scite.SendEditor(SCI_CANPASTE)
scite.SendEditor(SCI_CANREDO)
scite.SendEditor(SCI_CANUNDO)
scite.SendEditor(SCI_CHANGEINSERTION)
scite.SendEditor(SCI_CHANGELEXERSTATE)
scite.SendEditor(SCI_CHARLEFT)
scite.SendEditor(SCI_CHARLEFTEXTEND)
scite.SendEditor(SCI_CHARLEFTRECTEXTEND)
scite.SendEditor(SCI_CHARPOSITIONFROMPOINT)
scite.SendEditor(SCI_CHARPOSITIONFROMPOINTCLOSE)
scite.SendEditor(SCI_CHARRIGHT)
scite.SendEditor(SCI_CHARRIGHTEXTEND)
scite.SendEditor(SCI_CHARRIGHTRECTEXTEND)
scite.SendEditor(SCI_CHOOSECARETX)
scite.SendEditor(SCI_CLEAR)
scite.SendEditor(SCI_CLEARALL)
scite.SendEditor(SCI_CLEARALLCMDKEYS)
scite.SendEditor(SCI_CLEARCMDKEY)
scite.SendEditor(SCI_CLEARDOCUMENTSTYLE)
scite.SendEditor(SCI_CLEARREGISTEREDIMAGES)
scite.SendEditor(SCI_CLEARREPRESENTATION)
scite.SendEditor(SCI_CLEARSELECTIONS)
scite.SendEditor(SCI_CLEARTABSTOPS)
scite.SendEditor(SCI_CONTRACTEDFOLDNEXT)
scite.SendEditor(SCI_CONVERTEOLS)
scite.SendEditor(SCI_COPY)
scite.SendEditor(SCI_COPYALLOWLINE)
scite.SendEditor(SCI_COPYRANGE)
scite.SendEditor(SCI_COPYTEXT)
scite.SendEditor(SCI_COUNTCHARACTERS)
scite.SendEditor(SCI_COUNTCODEUNITS)
scite.SendEditor(SCI_CREATEDOCUMENT)
scite.SendEditor(SCI_CREATELOADER)
scite.SendEditor(SCI_CUT)
scite.SendEditor(SCI_DELETEBACK)
scite.SendEditor(SCI_DELETEBACKNOTLINE)
scite.SendEditor(SCI_DELETERANGE)
scite.SendEditor(SCI_DELLINELEFT)
scite.SendEditor(SCI_DELLINERIGHT)
scite.SendEditor(SCI_DELWORDLEFT)
scite.SendEditor(SCI_DELWORDRIGHT)
scite.SendEditor(SCI_DELWORDRIGHTEND)
scite.SendEditor(SCI_DOCLINEFROMVISIBLE)
scite.SendEditor(SCI_DOCUMENTEND)
scite.SendEditor(SCI_DOCUMENTENDEXTEND)
scite.SendEditor(SCI_DOCUMENTSTART)
scite.SendEditor(SCI_DOCUMENTSTARTEXTEND)
scite.SendEditor(SCI_DROPSELECTIONN)
scite.SendEditor(SCI_EDITTOGGLEOVERTYPE)
scite.SendEditor(SCI_EMPTYUNDOBUFFER)
scite.SendEditor(SCI_ENCODEDFROMUTF8)
scite.SendEditor(SCI_ENDUNDOACTION)
scite.SendEditor(SCI_ENSUREVISIBLE)
scite.SendEditor(SCI_ENSUREVISIBLEENFORCEPOLICY)
scite.SendEditor(SCI_EOLANNOTATIONCLEARALL)
scite.SendEditor(SCI_EOLANNOTATIONGETSTYLE)
scite.SendEditor(SCI_EOLANNOTATIONGETSTYLEOFFSET)
scite.SendEditor(SCI_EOLANNOTATIONGETTEXT)
scite.SendEditor(SCI_EOLANNOTATIONGETVISIBLE)
scite.SendEditor(SCI_EOLANNOTATIONSETSTYLE)
scite.SendEditor(SCI_EOLANNOTATIONSETSTYLEOFFSET)
scite.SendEditor(SCI_EOLANNOTATIONSETTEXT)
scite.SendEditor(SCI_EOLANNOTATIONSETVISIBLE)
scite.SendEditor(SCI_EXPANDCHILDREN)
scite.SendEditor(SCI_FINDCOLUMN)
scite.SendEditor(SCI_FINDINDICATORFLASH)
scite.SendEditor(SCI_FINDINDICATORHIDE)
scite.SendEditor(SCI_FINDINDICATORSHOW)
scite.SendEditor(SCI_FINDTEXT)
scite.SendEditor(SCI_FOLDALL)
scite.SendEditor(SCI_FOLDCHILDREN)
scite.SendEditor(SCI_FOLDDISPLAYTEXTGETSTYLE)
scite.SendEditor(SCI_FOLDDISPLAYTEXTSETSTYLE)
scite.SendEditor(SCI_FOLDLINE)
scite.SendEditor(SCI_FORMATRANGE)
scite.SendEditor(SCI_FORMFEED)
scite.SendEditor(SCI_GETACCESSIBILITY)
scite.SendEditor(SCI_GETADDITIONALCARETFORE)
scite.SendEditor(SCI_GETADDITIONALCARETSBLINK)
scite.SendEditor(SCI_GETADDITIONALCARETSVISIBLE)
scite.SendEditor(SCI_GETADDITIONALSELALPHA)
scite.SendEditor(SCI_GETADDITIONALSELECTIONTYPING)
scite.SendEditor(SCI_GETALLLINESVISIBLE)
scite.SendEditor(SCI_GETANCHOR)
scite.SendEditor(SCI_GETAUTOMATICFOLD)
scite.SendEditor(SCI_GETBACKSPACEUNINDENTS)
scite.SendEditor(SCI_GETBIDIRECTIONAL)
scite.SendEditor(SCI_GETBUFFEREDDRAW)
scite.SendEditor(SCI_GETCARETFORE)
scite.SendEditor(SCI_GETCARETLINEBACK)
scite.SendEditor(SCI_GETCARETLINEBACKALPHA)
scite.SendEditor(SCI_GETCARETLINEFRAME)
scite.SendEditor(SCI_GETCARETLINEVISIBLE)
scite.SendEditor(SCI_GETCARETLINEVISIBLEALWAYS)
scite.SendEditor(SCI_GETCARETPERIOD)
scite.SendEditor(SCI_GETCARETSTICKY)
scite.SendEditor(SCI_GETCARETSTYLE)
scite.SendEditor(SCI_GETCARETWIDTH)
scite.SendEditor(SCI_GETCHARACTERCATEGORYOPTIMIZATION)
scite.SendEditor(SCI_GETCHARACTERPOINTER)
scite.SendEditor(SCI_GETCHARAT)
scite.SendEditor(SCI_GETCODEPAGE)
scite.SendEditor(SCI_GETCOLUMN)
scite.SendEditor(SCI_GETCOMMANDEVENTS)
scite.SendEditor(SCI_GETCONTROLCHARSYMBOL)
scite.SendEditor(SCI_GETCURLINE)
scite.SendEditor(SCI_GETCURRENTPOS)
scite.SendEditor(SCI_GETCURSOR)
scite.SendEditor(SCI_GETDEFAULTFOLDDISPLAYTEXT)
scite.SendEditor(SCI_GETDIRECTFUNCTION)
scite.SendEditor(SCI_GETDIRECTPOINTER)
scite.SendEditor(SCI_GETDOCPOINTER)
scite.SendEditor(SCI_GETDOCUMENTOPTIONS)
scite.SendEditor(SCI_GETEDGECOLOUR)
scite.SendEditor(SCI_GETEDGECOLUMN)
scite.SendEditor(SCI_GETEDGEMODE)
scite.SendEditor(SCI_GETENDATLASTLINE)
scite.SendEditor(SCI_GETENDSTYLED)
scite.SendEditor(SCI_GETEOLMODE)
scite.SendEditor(SCI_GETEXTRAASCENT)
scite.SendEditor(SCI_GETEXTRADESCENT)
scite.SendEditor(SCI_GETFIRSTVISIBLELINE)
scite.SendEditor(SCI_GETFOCUS)
scite.SendEditor(SCI_GETFOLDEXPANDED)
scite.SendEditor(SCI_GETFOLDLEVEL)
scite.SendEditor(SCI_GETFOLDPARENT)
scite.SendEditor(SCI_GETFONTQUALITY)
scite.SendEditor(SCI_GETGAPPOSITION)
scite.SendEditor(SCI_GETHIGHLIGHTGUIDE)
scite.SendEditor(SCI_GETHOTSPOTACTIVEBACK)
scite.SendEditor(SCI_GETHOTSPOTACTIVEFORE)
scite.SendEditor(SCI_GETHOTSPOTACTIVEUNDERLINE)
scite.SendEditor(SCI_GETHOTSPOTSINGLELINE)
scite.SendEditor(SCI_GETHSCROLLBAR)
scite.SendEditor(SCI_GETIDENTIFIER)
scite.SendEditor(SCI_GETIDLESTYLING)
scite.SendEditor(SCI_GETIMEINTERACTION)
scite.SendEditor(SCI_GETINDENT)
scite.SendEditor(SCI_GETINDENTATIONGUIDES)
scite.SendEditor(SCI_GETINDICATORCURRENT)
scite.SendEditor(SCI_GETINDICATORVALUE)
scite.SendEditor(SCI_GETLASTCHILD)
scite.SendEditor(SCI_GETLAYOUTCACHE)
scite.SendEditor(SCI_GETLENGTH)
scite.SendEditor(SCI_GETLINE)
scite.SendEditor(SCI_GETLINECHARACTERINDEX)
scite.SendEditor(SCI_GETLINECOUNT)
scite.SendEditor(SCI_GETLINEENDPOSITION)
scite.SendEditor(SCI_GETLINEENDTYPESACTIVE)
scite.SendEditor(SCI_GETLINEENDTYPESALLOWED)
scite.SendEditor(SCI_GETLINEINDENTATION)
scite.SendEditor(SCI_GETLINEINDENTPOSITION)
scite.SendEditor(SCI_GETLINESELENDPOSITION)
scite.SendEditor(SCI_GETLINESELSTARTPOSITION)
scite.SendEditor(SCI_GETLINESTATE)
scite.SendEditor(SCI_GETLINEVISIBLE)
scite.SendEditor(SCI_GETMAINSELECTION)
scite.SendEditor(SCI_GETMARGINBACKN)
scite.SendEditor(SCI_GETMARGINCURSORN)
scite.SendEditor(SCI_GETMARGINLEFT)
scite.SendEditor(SCI_GETMARGINMASKN)
scite.SendEditor(SCI_GETMARGINOPTIONS)
scite.SendEditor(SCI_GETMARGINRIGHT)
scite.SendEditor(SCI_GETMARGINS)
scite.SendEditor(SCI_GETMARGINSENSITIVEN)
scite.SendEditor(SCI_GETMARGINTYPEN)
scite.SendEditor(SCI_GETMARGINWIDTHN)
scite.SendEditor(SCI_GETMAXLINESTATE)
scite.SendEditor(SCI_GETMODEVENTMASK)
scite.SendEditor(SCI_GETMODIFY)
scite.SendEditor(SCI_GETMOUSEDOWNCAPTURES)
scite.SendEditor(SCI_GETMOUSEDWELLTIME)
scite.SendEditor(SCI_GETMOUSESELECTIONRECTANGULARSWITCH)
scite.SendEditor(SCI_GETMOUSEWHEELCAPTURES)
scite.SendEditor(SCI_GETMOVEEXTENDSSELECTION)
scite.SendEditor(SCI_GETMULTIPASTE)
scite.SendEditor(SCI_GETMULTIPLESELECTION)
scite.SendEditor(SCI_GETNEXTTABSTOP)
scite.SendEditor(SCI_GETOVERTYPE)
scite.SendEditor(SCI_GETPASTECONVERTENDINGS)
scite.SendEditor(SCI_GETPHASESDRAW)
scite.SendEditor(SCI_GETPOSITIONCACHE)
scite.SendEditor(SCI_GETPRINTCOLOURMODE)
scite.SendEditor(SCI_GETPRINTMAGNIFICATION)
scite.SendEditor(SCI_GETPRINTWRAPMODE)
scite.SendEditor(SCI_GETPUNCTUATIONCHARS)
scite.SendEditor(SCI_GETRANGEPOINTER)
scite.SendEditor(SCI_GETREADONLY)
scite.SendEditor(SCI_GETRECTANGULARSELECTIONANCHOR)
scite.SendEditor(SCI_GETRECTANGULARSELECTIONANCHORVIRTUALSPACE)
scite.SendEditor(SCI_GETRECTANGULARSELECTIONCARET)
scite.SendEditor(SCI_GETRECTANGULARSELECTIONCARETVIRTUALSPACE)
scite.SendEditor(SCI_GETRECTANGULARSELECTIONMODIFIER)
scite.SendEditor(SCI_GETREPRESENTATION)
scite.SendEditor(SCI_GETSCROLLWIDTH)
scite.SendEditor(SCI_GETSCROLLWIDTHTRACKING)
scite.SendEditor(SCI_GETSEARCHFLAGS)
scite.SendEditor(SCI_GETSELALPHA)
scite.SendEditor(SCI_GETSELECTIONEMPTY)
scite.SendEditor(SCI_GETSELECTIONEND)
scite.SendEditor(SCI_GETSELECTIONMODE)
scite.SendEditor(SCI_GETSELECTIONNANCHOR)
scite.SendEditor(SCI_GETSELECTIONNANCHORVIRTUALSPACE)
scite.SendEditor(SCI_GETSELECTIONNCARET)
scite.SendEditor(SCI_GETSELECTIONNCARETVIRTUALSPACE)
scite.SendEditor(SCI_GETSELECTIONNEND)
scite.SendEditor(SCI_GETSELECTIONNENDVIRTUALSPACE)
scite.SendEditor(SCI_GETSELECTIONNSTART)
scite.SendEditor(SCI_GETSELECTIONNSTARTVIRTUALSPACE)
scite.SendEditor(SCI_GETSELECTIONS)
scite.SendEditor(SCI_GETSELECTIONSTART)
scite.SendEditor(SCI_GETSELEOLFILLED)
scite.SendEditor(SCI_GETSELTEXT)
scite.SendEditor(SCI_GETSTATUS)
scite.SendEditor(SCI_GETSTYLEAT)
scite.SendEditor(SCI_GETSTYLEDTEXT)
scite.SendEditor(SCI_GETTABDRAWMODE)
scite.SendEditor(SCI_GETTABINDENTS)
scite.SendEditor(SCI_GETTABMINIMUMWIDTH)
scite.SendEditor(SCI_GETTABWIDTH)
scite.SendEditor(SCI_GETTAG)
scite.SendEditor(SCI_GETTARGETEND)
scite.SendEditor(SCI_GETTARGETENDVIRTUALSPACE)
scite.SendEditor(SCI_GETTARGETSTART)
scite.SendEditor(SCI_GETTARGETSTARTVIRTUALSPACE)
scite.SendEditor(SCI_GETTARGETTEXT)
scite.SendEditor(SCI_GETTECHNOLOGY)
scite.SendEditor(SCI_GETTEXT)
scite.SendEditor(SCI_GETTEXTLENGTH)
scite.SendEditor(SCI_GETTEXTRANGE)
scite.SendEditor(SCI_GETUNDOCOLLECTION)
scite.SendEditor(SCI_GETUSETABS)
scite.SendEditor(SCI_GETVIEWEOL)
scite.SendEditor(SCI_GETVIEWWS)
scite.SendEditor(SCI_GETVIRTUALSPACEOPTIONS)
scite.SendEditor(SCI_GETVSCROLLBAR)
scite.SendEditor(SCI_GETWHITESPACECHARS)
scite.SendEditor(SCI_GETWHITESPACESIZE)
scite.SendEditor(SCI_GETWORDCHARS)
scite.SendEditor(SCI_GETWRAPINDENTMODE)
scite.SendEditor(SCI_GETWRAPMODE)
scite.SendEditor(SCI_GETWRAPSTARTINDENT)
scite.SendEditor(SCI_GETWRAPVISUALFLAGS)
scite.SendEditor(SCI_GETWRAPVISUALFLAGSLOCATION)
scite.SendEditor(SCI_GETXOFFSET)
scite.SendEditor(SCI_GETZOOM)
scite.SendEditor(SCI_GOTOLINE)
scite.SendEditor(SCI_GOTOPOS)
scite.SendEditor(SCI_GRABFOCUS)
scite.SendEditor(SCI_HIDELINES)
scite.SendEditor(SCI_HIDESELECTION)
scite.SendEditor(SCI_HOME)
scite.SendEditor(SCI_HOMEDISPLAY)
scite.SendEditor(SCI_HOMEDISPLAYEXTEND)
scite.SendEditor(SCI_HOMEEXTEND)
scite.SendEditor(SCI_HOMERECTEXTEND)
scite.SendEditor(SCI_HOMEWRAP)
scite.SendEditor(SCI_HOMEWRAPEXTEND)
scite.SendEditor(SCI_INDEXPOSITIONFROMLINE)
scite.SendEditor(SCI_INDICATORALLONFOR)
scite.SendEditor(SCI_INDICATORCLEARRANGE)
scite.SendEditor(SCI_INDICATOREND)
scite.SendEditor(SCI_INDICATORFILLRANGE)
scite.SendEditor(SCI_INDICATORSTART)
scite.SendEditor(SCI_INDICATORVALUEAT)
scite.SendEditor(SCI_INDICGETALPHA)
scite.SendEditor(SCI_INDICGETFLAGS)
scite.SendEditor(SCI_INDICGETFORE)
scite.SendEditor(SCI_INDICGETHOVERFORE)
scite.SendEditor(SCI_INDICGETHOVERSTYLE)
scite.SendEditor(SCI_INDICGETOUTLINEALPHA)
scite.SendEditor(SCI_INDICGETSTYLE)
scite.SendEditor(SCI_INDICGETUNDER)
scite.SendEditor(SCI_INDICSETALPHA)
scite.SendEditor(SCI_INDICSETFLAGS)
scite.SendEditor(SCI_INDICSETFORE)
scite.SendEditor(SCI_INDICSETHOVERFORE)
scite.SendEditor(SCI_INDICSETHOVERSTYLE)
scite.SendEditor(SCI_INDICSETOUTLINEALPHA)
scite.SendEditor(SCI_INDICSETSTYLE)
scite.SendEditor(SCI_INDICSETUNDER)
scite.SendEditor(SCI_INSERTTEXT)
scite.SendEditor(SCI_ISRANGEWORD)
scite.SendEditor(SCI_LEXER_START)
scite.SendEditor(SCI_LINECOPY)
scite.SendEditor(SCI_LINECUT)
scite.SendEditor(SCI_LINEDELETE)
scite.SendEditor(SCI_LINEDOWN)
scite.SendEditor(SCI_LINEDOWNEXTEND)
scite.SendEditor(SCI_LINEDOWNRECTEXTEND)
scite.SendEditor(SCI_LINEDUPLICATE)
scite.SendEditor(SCI_LINEEND)
scite.SendEditor(SCI_LINEENDDISPLAY)
scite.SendEditor(SCI_LINEENDDISPLAYEXTEND)
scite.SendEditor(SCI_LINEENDEXTEND)
scite.SendEditor(SCI_LINEENDRECTEXTEND)
scite.SendEditor(SCI_LINEENDWRAP)
scite.SendEditor(SCI_LINEENDWRAPEXTEND)
scite.SendEditor(SCI_LINEFROMINDEXPOSITION)
scite.SendEditor(SCI_LINEFROMPOSITION)
scite.SendEditor(SCI_LINELENGTH)
scite.SendEditor(SCI_LINEREVERSE)
scite.SendEditor(SCI_LINESCROLL)
scite.SendEditor(SCI_LINESCROLLDOWN)
scite.SendEditor(SCI_LINESCROLLUP)
scite.SendEditor(SCI_LINESJOIN)
scite.SendEditor(SCI_LINESONSCREEN)
scite.SendEditor(SCI_LINESSPLIT)
scite.SendEditor(SCI_LINETRANSPOSE)
scite.SendEditor(SCI_LINEUP)
scite.SendEditor(SCI_LINEUPEXTEND)
scite.SendEditor(SCI_LINEUPRECTEXTEND)
scite.SendEditor(SCI_LOWERCASE)
scite.SendEditor(SCI_MARGINGETSTYLE)
scite.SendEditor(SCI_MARGINGETSTYLEOFFSET)
scite.SendEditor(SCI_MARGINGETSTYLES)
scite.SendEditor(SCI_MARGINGETTEXT)
scite.SendEditor(SCI_MARGINSETSTYLE)
scite.SendEditor(SCI_MARGINSETSTYLEOFFSET)
scite.SendEditor(SCI_MARGINSETSTYLES)
scite.SendEditor(SCI_MARGINSETTEXT)
scite.SendEditor(SCI_MARGINTEXTCLEARALL)
scite.SendEditor(SCI_MARKERADD)
scite.SendEditor(SCI_MARKERADDSET)
scite.SendEditor(SCI_MARKERDEFINE)
scite.SendEditor(SCI_MARKERDEFINEPIXMAP)
scite.SendEditor(SCI_MARKERDEFINERGBAIMAGE)
scite.SendEditor(SCI_MARKERDELETE)
scite.SendEditor(SCI_MARKERDELETEALL)
scite.SendEditor(SCI_MARKERDELETEHANDLE)
scite.SendEditor(SCI_MARKERENABLEHIGHLIGHT)
scite.SendEditor(SCI_MARKERGET)
scite.SendEditor(SCI_MARKERHANDLEFROMLINE)
scite.SendEditor(SCI_MARKERLINEFROMHANDLE)
scite.SendEditor(SCI_MARKERNEXT)
scite.SendEditor(SCI_MARKERNUMBERFROMLINE)
scite.SendEditor(SCI_MARKERPREVIOUS)
scite.SendEditor(SCI_MARKERSETALPHA)
scite.SendEditor(SCI_MARKERSETBACK)
scite.SendEditor(SCI_MARKERSETBACKSELECTED)
scite.SendEditor(SCI_MARKERSETFORE)
scite.SendEditor(SCI_MARKERSYMBOLDEFINED)
scite.SendEditor(SCI_MOVECARETINSIDEVIEW)
scite.SendEditor(SCI_MOVESELECTEDLINESDOWN)
scite.SendEditor(SCI_MOVESELECTEDLINESUP)
scite.SendEditor(SCI_MULTIEDGEADDLINE)
scite.SendEditor(SCI_MULTIEDGECLEARALL)
scite.SendEditor(SCI_MULTIPLESELECTADDEACH)
scite.SendEditor(SCI_MULTIPLESELECTADDNEXT)
scite.SendEditor(SCI_NEWLINE)
scite.SendEditor(SCI_NULL)
scite.SendEditor(SCI_OPTIONAL_START)
scite.SendEditor(SCI_PAGEDOWN)
scite.SendEditor(SCI_PAGEDOWNEXTEND)
scite.SendEditor(SCI_PAGEDOWNRECTEXTEND)
scite.SendEditor(SCI_PAGEUP)
scite.SendEditor(SCI_PAGEUPEXTEND)
scite.SendEditor(SCI_PAGEUPRECTEXTEND)
scite.SendEditor(SCI_PARADOWN)
scite.SendEditor(SCI_PARADOWNEXTEND)
scite.SendEditor(SCI_PARAUP)
scite.SendEditor(SCI_PARAUPEXTEND)
scite.SendEditor(SCI_PASTE)
scite.SendEditor(SCI_POINTXFROMPOSITION)
scite.SendEditor(SCI_POINTYFROMPOSITION)
scite.SendEditor(SCI_POSITIONAFTER)
scite.SendEditor(SCI_POSITIONBEFORE)
scite.SendEditor(SCI_POSITIONFROMLINE)
scite.SendEditor(SCI_POSITIONFROMPOINT)
scite.SendEditor(SCI_POSITIONFROMPOINTCLOSE)
scite.SendEditor(SCI_POSITIONRELATIVE)
scite.SendEditor(SCI_POSITIONRELATIVECODEUNITS)
scite.SendEditor(SCI_REDO)
scite.SendEditor(SCI_REGISTERIMAGE)
scite.SendEditor(SCI_REGISTERRGBAIMAGE)
scite.SendEditor(SCI_RELEASEALLEXTENDEDSTYLES)
scite.SendEditor(SCI_RELEASEDOCUMENT)
scite.SendEditor(SCI_RELEASELINECHARACTERINDEX)
scite.SendEditor(SCI_REPLACESEL)
scite.SendEditor(SCI_REPLACETARGET)
scite.SendEditor(SCI_REPLACETARGETRE)
scite.SendEditor(SCI_RGBAIMAGESETHEIGHT)
scite.SendEditor(SCI_RGBAIMAGESETSCALE)
scite.SendEditor(SCI_RGBAIMAGESETWIDTH)
scite.SendEditor(SCI_ROTATESELECTION)
scite.SendEditor(SCI_SCROLLCARET)
scite.SendEditor(SCI_SCROLLRANGE)
scite.SendEditor(SCI_SCROLLTOEND)
scite.SendEditor(SCI_SCROLLTOSTART)
scite.SendEditor(SCI_SEARCHANCHOR)
scite.SendEditor(SCI_SEARCHINTARGET)
scite.SendEditor(SCI_SEARCHNEXT)
scite.SendEditor(SCI_SEARCHPREV)
scite.SendEditor(SCI_SELECTALL)
scite.SendEditor(SCI_SELECTIONDUPLICATE)
scite.SendEditor(SCI_SELECTIONISRECTANGLE)
scite.SendEditor(SCI_SETACCESSIBILITY)
scite.SendEditor(SCI_SETADDITIONALCARETFORE)
scite.SendEditor(SCI_SETADDITIONALCARETSBLINK)
scite.SendEditor(SCI_SETADDITIONALCARETSVISIBLE)
scite.SendEditor(SCI_SETADDITIONALSELALPHA)
scite.SendEditor(SCI_SETADDITIONALSELBACK)
scite.SendEditor(SCI_SETADDITIONALSELECTIONTYPING)
scite.SendEditor(SCI_SETADDITIONALSELFORE)
scite.SendEditor(SCI_SETANCHOR)
scite.SendEditor(SCI_SETAUTOMATICFOLD)
scite.SendEditor(SCI_SETBACKSPACEUNINDENTS)
scite.SendEditor(SCI_SETBIDIRECTIONAL)
scite.SendEditor(SCI_SETBUFFEREDDRAW)
scite.SendEditor(SCI_SETCARETFORE)
scite.SendEditor(SCI_SETCARETLINEBACK)
scite.SendEditor(SCI_SETCARETLINEBACKALPHA)
scite.SendEditor(SCI_SETCARETLINEFRAME)
scite.SendEditor(SCI_SETCARETLINEVISIBLE)
scite.SendEditor(SCI_SETCARETLINEVISIBLEALWAYS)
scite.SendEditor(SCI_SETCARETPERIOD)
scite.SendEditor(SCI_SETCARETSTICKY)
scite.SendEditor(SCI_SETCARETSTYLE)
scite.SendEditor(SCI_SETCARETWIDTH)
scite.SendEditor(SCI_SETCHARACTERCATEGORYOPTIMIZATION)
scite.SendEditor(SCI_SETCHARSDEFAULT)
scite.SendEditor(SCI_SETCODEPAGE)
scite.SendEditor(SCI_SETCOMMANDEVENTS)
scite.SendEditor(SCI_SETCONTROLCHARSYMBOL)
scite.SendEditor(SCI_SETCURRENTPOS)
scite.SendEditor(SCI_SETCURSOR)
scite.SendEditor(SCI_SETDEFAULTFOLDDISPLAYTEXT)
scite.SendEditor(SCI_SETDOCPOINTER)
scite.SendEditor(SCI_SETEDGECOLOUR)
scite.SendEditor(SCI_SETEDGECOLUMN)
scite.SendEditor(SCI_SETEDGEMODE)
scite.SendEditor(SCI_SETEMPTYSELECTION)
scite.SendEditor(SCI_SETENDATLASTLINE)
scite.SendEditor(SCI_SETEOLMODE)
scite.SendEditor(SCI_SETEXTRAASCENT)
scite.SendEditor(SCI_SETEXTRADESCENT)
scite.SendEditor(SCI_SETFIRSTVISIBLELINE)
scite.SendEditor(SCI_SETFOCUS)
scite.SendEditor(SCI_SETFOLDEXPANDED)
scite.SendEditor(SCI_SETFOLDFLAGS)
scite.SendEditor(SCI_SETFOLDLEVEL)
scite.SendEditor(SCI_SETFOLDMARGINCOLOUR)
scite.SendEditor(SCI_SETFOLDMARGINHICOLOUR)
scite.SendEditor(SCI_SETFONTQUALITY)
scite.SendEditor(SCI_SETHIGHLIGHTGUIDE)
scite.SendEditor(SCI_SETHOTSPOTACTIVEBACK)
scite.SendEditor(SCI_SETHOTSPOTACTIVEFORE)
scite.SendEditor(SCI_SETHOTSPOTACTIVEUNDERLINE)
scite.SendEditor(SCI_SETHOTSPOTSINGLELINE)
scite.SendEditor(SCI_SETHSCROLLBAR)
scite.SendEditor(SCI_SETIDENTIFIER)
scite.SendEditor(SCI_SETIDLESTYLING)
scite.SendEditor(SCI_SETIMEINTERACTION)
scite.SendEditor(SCI_SETINDENT)
scite.SendEditor(SCI_SETINDENTATIONGUIDES)
scite.SendEditor(SCI_SETINDICATORCURRENT)
scite.SendEditor(SCI_SETINDICATORVALUE)
scite.SendEditor(SCI_SETLAYOUTCACHE)
scite.SendEditor(SCI_SETLENGTHFORENCODE)
scite.SendEditor(SCI_SETLINEENDTYPESALLOWED)
scite.SendEditor(SCI_SETLINEINDENTATION)
scite.SendEditor(SCI_SETLINESTATE)
scite.SendEditor(SCI_SETMAINSELECTION)
scite.SendEditor(SCI_SETMARGINBACKN)
scite.SendEditor(SCI_SETMARGINCURSORN)
scite.SendEditor(SCI_SETMARGINLEFT)
scite.SendEditor(SCI_SETMARGINMASKN)
scite.SendEditor(SCI_SETMARGINOPTIONS)
scite.SendEditor(SCI_SETMARGINRIGHT)
scite.SendEditor(SCI_SETMARGINS)
scite.SendEditor(SCI_SETMARGINSENSITIVEN)
scite.SendEditor(SCI_SETMARGINTYPEN)
scite.SendEditor(SCI_SETMARGINWIDTHN)
scite.SendEditor(SCI_SETMODEVENTMASK)
scite.SendEditor(SCI_SETMOUSEDOWNCAPTURES)
scite.SendEditor(SCI_SETMOUSEDWELLTIME)
scite.SendEditor(SCI_SETMOUSESELECTIONRECTANGULARSWITCH)
scite.SendEditor(SCI_SETMOUSEWHEELCAPTURES)
scite.SendEditor(SCI_SETMULTIPASTE)
scite.SendEditor(SCI_SETMULTIPLESELECTION)
scite.SendEditor(SCI_SETOVERTYPE)
scite.SendEditor(SCI_SETPASTECONVERTENDINGS)
scite.SendEditor(SCI_SETPHASESDRAW)
scite.SendEditor(SCI_SETPOSITIONCACHE)
scite.SendEditor(SCI_SETPRINTCOLOURMODE)
scite.SendEditor(SCI_SETPRINTMAGNIFICATION)
scite.SendEditor(SCI_SETPRINTWRAPMODE)
scite.SendEditor(SCI_SETPUNCTUATIONCHARS)
scite.SendEditor(SCI_SETREADONLY)
scite.SendEditor(SCI_SETRECTANGULARSELECTIONANCHOR)
scite.SendEditor(SCI_SETRECTANGULARSELECTIONANCHORVIRTUALSPACE)
scite.SendEditor(SCI_SETRECTANGULARSELECTIONCARET)
scite.SendEditor(SCI_SETRECTANGULARSELECTIONCARETVIRTUALSPACE)
scite.SendEditor(SCI_SETRECTANGULARSELECTIONMODIFIER)
scite.SendEditor(SCI_SETREPRESENTATION)
scite.SendEditor(SCI_SETSAVEPOINT)
scite.SendEditor(SCI_SETSCROLLWIDTH)
scite.SendEditor(SCI_SETSCROLLWIDTHTRACKING)
scite.SendEditor(SCI_SETSEARCHFLAGS)
scite.SendEditor(SCI_SETSEL)
scite.SendEditor(SCI_SETSELALPHA)
scite.SendEditor(SCI_SETSELBACK)
scite.SendEditor(SCI_SETSELECTION)
scite.SendEditor(SCI_SETSELECTIONEND)
scite.SendEditor(SCI_SETSELECTIONMODE)
scite.SendEditor(SCI_SETSELECTIONNANCHOR)
scite.SendEditor(SCI_SETSELECTIONNANCHORVIRTUALSPACE)
scite.SendEditor(SCI_SETSELECTIONNCARET)
scite.SendEditor(SCI_SETSELECTIONNCARETVIRTUALSPACE)
scite.SendEditor(SCI_SETSELECTIONNEND)
scite.SendEditor(SCI_SETSELECTIONNSTART)
scite.SendEditor(SCI_SETSELECTIONSTART)
scite.SendEditor(SCI_SETSELEOLFILLED)
scite.SendEditor(SCI_SETSELFORE)
scite.SendEditor(SCI_SETSTATUS)
scite.SendEditor(SCI_SETSTYLING)
scite.SendEditor(SCI_SETSTYLINGEX)
scite.SendEditor(SCI_SETTABDRAWMODE)
scite.SendEditor(SCI_SETTABINDENTS)
scite.SendEditor(SCI_SETTABMINIMUMWIDTH)
scite.SendEditor(SCI_SETTABWIDTH)
scite.SendEditor(SCI_SETTARGETEND)
scite.SendEditor(SCI_SETTARGETENDVIRTUALSPACE)
scite.SendEditor(SCI_SETTARGETRANGE)
scite.SendEditor(SCI_SETTARGETSTART)
scite.SendEditor(SCI_SETTARGETSTARTVIRTUALSPACE)
scite.SendEditor(SCI_SETTECHNOLOGY)
scite.SendEditor(SCI_SETTEXT)
scite.SendEditor(SCI_SETUNDOCOLLECTION)
scite.SendEditor(SCI_SETUSETABS)
scite.SendEditor(SCI_SETVIEWEOL)
scite.SendEditor(SCI_SETVIEWWS)
scite.SendEditor(SCI_SETVIRTUALSPACEOPTIONS)
scite.SendEditor(SCI_SETVISIBLEPOLICY)
scite.SendEditor(SCI_SETVSCROLLBAR)
scite.SendEditor(SCI_SETWHITESPACEBACK)
scite.SendEditor(SCI_SETWHITESPACECHARS)
scite.SendEditor(SCI_SETWHITESPACEFORE)
scite.SendEditor(SCI_SETWHITESPACESIZE)
scite.SendEditor(SCI_SETWORDCHARS)
scite.SendEditor(SCI_SETWRAPINDENTMODE)
scite.SendEditor(SCI_SETWRAPMODE)
scite.SendEditor(SCI_SETWRAPSTARTINDENT)
scite.SendEditor(SCI_SETWRAPVISUALFLAGS)
scite.SendEditor(SCI_SETWRAPVISUALFLAGSLOCATION)
scite.SendEditor(SCI_SETXCARETPOLICY)
scite.SendEditor(SCI_SETXOFFSET)
scite.SendEditor(SCI_SETYCARETPOLICY)
scite.SendEditor(SCI_SETZOOM)
scite.SendEditor(SCI_SHOWLINES)
scite.SendEditor(SCI_START)
scite.SendEditor(SCI_STARTRECORD)
scite.SendEditor(SCI_STARTSTYLING)
scite.SendEditor(SCI_STOPRECORD)
scite.SendEditor(SCI_STUTTEREDPAGEDOWN)
scite.SendEditor(SCI_STUTTEREDPAGEDOWNEXTEND)
scite.SendEditor(SCI_STUTTEREDPAGEUP)
scite.SendEditor(SCI_STUTTEREDPAGEUPEXTEND)
scite.SendEditor(SCI_STYLECLEARALL)
scite.SendEditor(SCI_STYLEGETBACK)
scite.SendEditor(SCI_STYLEGETBOLD)
scite.SendEditor(SCI_STYLEGETCASE)
scite.SendEditor(SCI_STYLEGETCHANGEABLE)
scite.SendEditor(SCI_STYLEGETCHARACTERSET)
scite.SendEditor(SCI_STYLEGETEOLFILLED)
scite.SendEditor(SCI_STYLEGETFONT)
scite.SendEditor(SCI_STYLEGETFORE)
scite.SendEditor(SCI_STYLEGETHOTSPOT)
scite.SendEditor(SCI_STYLEGETITALIC)
scite.SendEditor(SCI_STYLEGETSIZE)
scite.SendEditor(SCI_STYLEGETSIZEFRACTIONAL)
scite.SendEditor(SCI_STYLEGETUNDERLINE)
scite.SendEditor(SCI_STYLEGETVISIBLE)
scite.SendEditor(SCI_STYLEGETWEIGHT)
scite.SendEditor(SCI_STYLERESETDEFAULT)
scite.SendEditor(SCI_STYLESETBACK)
scite.SendEditor(SCI_STYLESETBOLD)
scite.SendEditor(SCI_STYLESETCASE)
scite.SendEditor(SCI_STYLESETCHANGEABLE)
scite.SendEditor(SCI_STYLESETCHARACTERSET)
scite.SendEditor(SCI_STYLESETEOLFILLED)
scite.SendEditor(SCI_STYLESETFONT)
scite.SendEditor(SCI_STYLESETFORE)
scite.SendEditor(SCI_STYLESETHOTSPOT)
scite.SendEditor(SCI_STYLESETITALIC)
scite.SendEditor(SCI_STYLESETSIZE)
scite.SendEditor(SCI_STYLESETSIZEFRACTIONAL)
scite.SendEditor(SCI_STYLESETUNDERLINE)
scite.SendEditor(SCI_STYLESETVISIBLE)
scite.SendEditor(SCI_STYLESETWEIGHT)
scite.SendEditor(SCI_SWAPMAINANCHORCARET)
scite.SendEditor(SCI_TAB)
scite.SendEditor(SCI_TARGETASUTF8)
scite.SendEditor(SCI_TARGETFROMSELECTION)
scite.SendEditor(SCI_TARGETWHOLEDOCUMENT)
scite.SendEditor(SCI_TEXTHEIGHT)
scite.SendEditor(SCI_TEXTWIDTH)
scite.SendEditor(SCI_TOGGLECARETSTICKY)
scite.SendEditor(SCI_TOGGLEFOLD)
scite.SendEditor(SCI_TOGGLEFOLDSHOWTEXT)
scite.SendEditor(SCI_UNDO)
scite.SendEditor(SCI_UPPERCASE)
scite.SendEditor(SCI_USEPOPUP)
scite.SendEditor(SCI_USERLISTSHOW)
scite.SendEditor(SCI_VCHOME)
scite.SendEditor(SCI_VCHOMEDISPLAY)
scite.SendEditor(SCI_VCHOMEDISPLAYEXTEND)
scite.SendEditor(SCI_VCHOMEEXTEND)
scite.SendEditor(SCI_VCHOMERECTEXTEND)
scite.SendEditor(SCI_VCHOMEWRAP)
scite.SendEditor(SCI_VCHOMEWRAPEXTEND)
scite.SendEditor(SCI_VERTICALCENTRECARET)
scite.SendEditor(SCI_VISIBLEFROMDOCLINE)
scite.SendEditor(SCI_WORDENDPOSITION)
scite.SendEditor(SCI_WORDLEFT)
scite.SendEditor(SCI_WORDLEFTEND)
scite.SendEditor(SCI_WORDLEFTENDEXTEND)
scite.SendEditor(SCI_WORDLEFTEXTEND)
scite.SendEditor(SCI_WORDPARTLEFT)
scite.SendEditor(SCI_WORDPARTLEFTEXTEND)
scite.SendEditor(SCI_WORDPARTRIGHT)
scite.SendEditor(SCI_WORDPARTRIGHTEXTEND)
scite.SendEditor(SCI_WORDRIGHT)
scite.SendEditor(SCI_WORDRIGHTEND)
scite.SendEditor(SCI_WORDRIGHTENDEXTEND)
scite.SendEditor(SCI_WORDRIGHTEXTEND)
scite.SendEditor(SCI_WORDSTARTPOSITION)
scite.SendEditor(SCI_WRAPCOUNT)
scite.SendEditor(SCI_ZOOMIN)
scite.SendEditor(SCI_ZOOMOUT)
scite.SendOutput()
scite.StripSet()
scite.StripSetList()
scite.StripShow()
scite.StripValue()
scite.UpdateStatusBar()
scite.BlockSelect()
editor.Accessibility= Enable or disable accessibility.
editor.AdditionalCaretFore= Set the foreground colour of additional carets.
editor.AdditionalCaretsBlink= Set whether additional carets will blink
editor.AdditionalCaretsVisible= Set whether additional carets are visible
editor.AdditionalSelAlpha= Set the alpha of the selection.
editor.AdditionalSelBack= write-only Set the background colour of additional selections - Must have previously called SetSelBack with non-zero first argument for this to have an effect.
editor.AdditionalSelFore= write-only Set the foreground colour of additional selections - Must have previously called SetSelFore with non-zero first argument for this to have an effect.
editor.AdditionalSelectionTyping= Set whether typing can be performed into multiple selections
editor.AllLinesVisible= read-only
editor.AllocateExtendedStyles(int numberStyles) -- Allocate some extended (>255) -- style numbers and return the start of the range
editor.AllocateSubStyles(int styleBase int numberStyles) -- Allocate a set of sub styles for a particular base style returning start of range
editor.Anchor= Set the selection anchor to a position - The anchor is the opposite end of the selection from the caret.
editor.AnnotationLines[line line]= read-only
editor.AnnotationStyleOffset= Get the start of the range of style numbers used for annotations
editor.AnnotationStyle[line line]= Set the style number for the annotations for a line
editor.AnnotationStyles[line line]= Set the annotation styles for a line
editor.AnnotationText[line line]= Set the annotation text for a line
editor.AnnotationVisible= Set the visibility for the annotations for a view
editor.AutoCAutoHide= Set whether or not autocompletion is hidden automatically when nothing matches.
editor.AutoCCancelAtStart= Should the auto-completion list be cancelled if the user backspaces to a position before where the box was created.
editor.AutoCCaseInsensitiveBehaviour= Set auto-completion case insensitive behaviour to either prefer case-sensitive matches or have no preference.
editor.AutoCChooseSingle= Should a single item auto-completion list automatically choose the item.
editor.AutoCCurrent= read-only
editor.AutoCCurrentText= read-only
editor.AutoCDropRestOfWord= Set whether or not autocompletion deletes any word characters after the inserted text upon completion.
editor.AutoCFillUps= write-only Define a set of characters that when typed will cause the autocompletion to choose the selected item.
editor.AutoCIgnoreCase= Set whether case is significant when performing auto-completion searches.
editor.AutoCMaxHeight= Set the maximum height in rows of auto-completion and user lists - The default is 5 rows.
editor.AutoCMaxWidth= Set the maximum width in characters of auto-completion and user lists - Set to 0 to autosize to fit longest item which is the default.
editor.AutoCMulti= Change the effect of autocompleting when there are multiple selections.
editor.AutoCOrder= Set the way autocompletion lists are ordered.
editor.AutoCPosStart() -- Retrieve the position of the caret when the auto-completion list was displayed.
editor.AutoCSeparator= Change the separator character in the string setting up an auto-completion list - Default is space but can be changed if items contain space.
editor.AutoCTypeSeparator= Change the type-separator character in the string setting up an auto-completion list - Default is '?' but can be changed if items contain '?'.
editor.AutomaticFold= Set automatic folding behaviours.
editor.BackSpaceUnIndents= Sets whether a backspace pressed when caret is within indentation unindents.
editor.Bidirectional= Set bidirectional text display state.
editor.BraceMatch(position pos int maxReStyle) -- Find the position of a matching brace or INVALID_POSITION if no match - The maxReStyle must be 0 for now - It may be defined in a future release.
editor.BufferedDraw= If drawing is buffered then each line of text is drawn into a bitmap buffer before drawing it to the screen to avoid flicker.
editor.CallTipBack= write-only Set the background colour for the call tip.
editor.CallTipFore= write-only Set the foreground colour for the call tip.
editor.CallTipForeHlt= write-only Set the foreground colour for the highlighted part of the call tip.
editor.CallTipPosStart= write-only Set the start position in order to change when backspacing removes the calltip.
editor.CallTipPosStart() -- Retrieve the position where the caret was before displaying the call tip.
editor.CallTipPosition= write-only Set position of calltip above or below text.
editor.CallTipUseStyle= write-only Enable use of STYLE_CALLTIP and set call tip tab size in pixels.
editor.CaretFore= Set the foreground colour of the caret.
editor.CaretLineBack= Set the colour of the background of the line containing the caret.
editor.CaretLineBackAlpha= Set background alpha of the caret line.
editor.CaretLineFrame= Display the caret line framed - Set width != 0 to enable this option and width = 0 to disable it.
editor.CaretLineVisible= Display the background of the line containing the caret in a different colour.
editor.CaretLineVisibleAlways= Sets the caret line to always visible.
editor.CaretPeriod= Get the time in milliseconds that the caret is on and off - 0 = steady on.
editor.CaretSticky= Stop the caret preferred x position changing when the user types.
editor.CaretStyle= Set the style of the caret to be drawn.
editor.CaretWidth= Set the width of the insert mode caret.
editor.ChangeLexerState(position start position end) -- Indicate that the internal state of a lexer has changed over a range and therefore there may be a need to redraw.
editor.CharAt[position pos]= read-only
editor.CharPositionFromPoint(int x int y) -- Find the position of a character from a point within the window.
editor.CharPositionFromPointClose(int x int y) -- Find the position of a character from a point within the window - Return INVALID_POSITION if not close to text.
editor.CharacterCategoryOptimization= Set the number of characters to have directly indexed categories
editor.CodePage= Set the code page used to interpret the bytes of the document as characters The SC_CP_UTF8 value can be used to enter Unicode mode.
editor.Column[position pos]= read-only
editor.CommandEvents= Set whether command events are sent to the container.
editor.ContractedFoldNext(line lineStart) -- Find the next line at or after lineStart that is a contracted fold header line - Return -1 when no more lines.
editor.ControlCharSymbol= Change the way control characters are displayed If symbol is < 32 keep the drawn way else use the given character.
editor.CountCharacters(position start position end) -- Count characters between two positions.
editor.CountCodeUnits(position start position end) -- Count code units between two positions.
editor.CurrentPos= Sets the position of the caret.
editor.Cursor= Sets the cursor to one of the SC_CURSOR* values.
editor.DistanceToSecondaryStyles= read-only
editor.DocLineFromVisible(line displayLine) -- Find the document line of a display line taking hidden lines into account.
editor.DocumentOptions= read-only
editor.EOLMode= Set the current end of line mode.
editor.EdgeColour= Change the colour used in edge indication.
editor.EdgeColumn= Set the column number of the edge - If text goes past the edge then it is highlighted.
editor.EdgeMode= The edge may be displayed by a line (EDGE_LINE/EDGE_MULTILINE) -- or by highlighting text that goes beyond it (EDGE_BACKGROUND) -- or not displayed at all (EDGE_NONE).
editor.EndAtLastLine= Sets the scroll range so that maximum scroll position has the last line at the bottom of the view (default) -- - Setting this to false allows scrolling one page below the last line.
editor.EndStyled= read-only
editor.ExtraAscent= Set extra ascent for each line
editor.ExtraDescent= Set extra descent for each line
editor.FindColumn(line line position column) -- Find the position of a column on a line taking into account tabs and multi-byte characters - If beyond end of line return line end position.
editor.FirstVisibleLine= Scroll so that a display line is at the top of the display.
editor.Focus= Change internal focus flag.
editor.FoldDisplayTextStyle= Set the style of fold display text.
editor.FoldExpanded[line line]= Show the children of a header line.
editor.FoldFlags= write-only Set some style options for folding.
editor.FoldLevel[line line]= Set the fold level of a line - This encodes an integer level along with flags indicating whether the line is a header and whether it is effectively white space.
editor.FoldParent[line line]= read-only
editor.FontQuality= Choose the quality level for text from the FontQuality enumeration.
editor.GapPosition= read-only
editor.GetLastChild(line line int level) -- Find the last child line of a header line.
editor.GetLineSelEndPosition(line line) -- Retrieve the position of the end of the selection at the given line (INVALID_POSITION if no selection on this line).
editor.GetLineSelStartPosition(line line) -- Retrieve the position of the start of the selection at the given line (INVALID_POSITION if no selection on this line).
editor.GetNextTabStop(line line int x) -- Find the next explicit tab stop position on a line after a position.
editor.GetPropertyInt(string key int defaultValue) -- Retrieve a "property" value previously set with SetProperty interpreted as an int AFTER any "$()" variable replacement.
editor.HScrollBar= Show or hide the horizontal scroll bar.
editor.HighlightGuide= Set the highlighted indentation guide column - 0 = no highlighted guide.
editor.HotspotActiveUnderline= Enable / Disable underlining active hotspots.
editor.HotspotSingleLine= Limit hotspots to single line so hotspots on two lines don't merge.
editor.IMEInteraction= Choose to display the IME in a window or inline.
editor.Identifier= Set the identifier reported as idFrom in notification messages.
editor.Identifiers[int style]= write-only Set the identifiers that are shown in a particular style
editor.IdleStyling= Sets limits to idle styling.
editor.Indent= Set the number of spaces used for one level of indentation.
editor.IndentationGuides= Show or hide indentation guides.
editor.IndexPositionFromLine(line line int lineCharacterIndex) -- Retrieve the position measured in index units at the start of a document line.
editor.IndicAlpha[int indicator]= Set the alpha fill colour of the given indicator.
editor.IndicFlags[int indicator]= Set the attributes of an indicator.
editor.IndicFore[int indicator]= Set the foreground colour of an indicator.
editor.IndicHoverFore[int indicator]= Set the foreground hover colour of an indicator.
editor.IndicHoverStyle[int indicator]= Set a hover indicator to plain squiggle or TT.
editor.IndicOutlineAlpha[int indicator]= Set the alpha outline colour of the given indicator.
editor.IndicStyle[int indicator]= Set an indicator to plain squiggle or TT.
editor.IndicUnder[int indicator]= Set an indicator to draw under text or over(default).
editor.IndicatorAllOnFor(position pos) -- Are any indicators present at pos?
editor.IndicatorCurrent= Set the indicator used for IndicatorFillRange and IndicatorClearRange
editor.IndicatorEnd(int indicator position pos) -- Where does a particular indicator end?
editor.IndicatorStart(int indicator position pos) -- Where does a particular indicator start?
editor.IndicatorValue= Set the value used for IndicatorFillRange
editor.IndicatorValueAt(int indicator position pos) -- What value does a particular indicator have at a position?
editor.KeyWords[int keyWordSet]= write-only Set up the key words used by the lexer.
editor.LayoutCache= Sets the degree of caching of layout information.
editor.Length= read-only
editor.Lexer= Set the lexing language of the document.
editor.LexerLanguage= Set the lexing language of the document based on string name.
editor.LineCharacterIndex= read-only
editor.LineCount= read-only
editor.LineEndPosition[line line]= read-only
editor.LineEndTypesActive= read-only
editor.LineEndTypesAllowed= Set the line end types that the application wants to use - May not be used if incompatible with lexer or encoding.
editor.LineEndTypesSupported= read-only
editor.LineFromIndexPosition(position pos int lineCharacterIndex) -- Retrieve the document line containing a position measured in index units.
editor.LineFromPosition(position pos) -- Retrieve the line containing a position.
editor.LineIndentPosition[line line]= read-only
editor.LineIndentation[line line]= Change the indentation of a line to a number of columns.
editor.LineLength(line line) -- How many characters are on a line including end of line characters?
editor.LineState[line line]= Used to hold extra styling information for each line.
editor.LineVisible[line line]= read-only
editor.LinesOnScreen= read-only
editor.MainSelection= Set the main selection
editor.MarginBackN[int margin]= Set the background colour of a margin - Only visible for SC_MARGIN_COLOUR.
editor.MarginCursorN[int margin]= Set the cursor shown when the mouse is inside a margin.
editor.MarginLeft= Sets the size in pixels of the left margin.
editor.MarginMaskN[int margin]= Set a mask that determines which markers are displayed in a margin.
editor.MarginOptions= Set the margin options.
editor.MarginRight= Sets the size in pixels of the right margin.
editor.MarginSensitiveN[int margin]= Make a margin sensitive or insensitive to mouse clicks.
editor.MarginStyleOffset= Get the start of the range of style numbers used for margin text
editor.MarginStyle[line line]= Set the style number for the text margin for a line
editor.MarginStyles[line line]= Set the style in the text margin for a line
editor.MarginText[line line]= Set the text in the text margin for a line
editor.MarginTypeN[int margin]= Set a margin to be either numeric or symbolic.
editor.MarginWidthN[int margin]= Set the width of a margin to a width expressed in pixels.
editor.Margins= Allocate a non-standard number of margins.
editor.MarkerAdd(line line int markerNumber) -- Add a marker to a line returning an ID which can be used to find or delete the marker.
editor.MarkerAlpha[int markerNumber]= write-only Set the alpha used for a marker that is drawn in the text area not the margin.
editor.MarkerBackSelected[int markerNumber]= write-only Set the background colour used for a particular marker number when its folding block is selected.
editor.MarkerBack[int markerNumber]= write-only Set the background colour used for a particular marker number.
editor.MarkerFore[int markerNumber]= write-only Set the foreground colour used for a particular marker number.
editor.MarkerGet(line line) -- Get a bit mask of all the markers set on a line.
editor.MarkerHandleFromLine(line line int which) -- Retrieve marker handles of a line
editor.MarkerLineFromHandle(int markerHandle) -- Retrieve the line number at which a particular marker is located.
editor.MarkerNext(line lineStart int markerMask) -- Find the next line at or after lineStart that includes a marker in mask - Return -1 when no more lines.
editor.MarkerNumberFromLine(line line int which) -- Retrieve marker number of a marker handle
editor.MarkerPrevious(line lineStart int markerMask) -- Find the previous line before lineStart that includes a marker in mask.
editor.MarkerSymbolDefined(int markerNumber) -- Which symbol was defined for markerNumber with MarkerDefine
editor.MaxLineState= read-only
editor.ModEventMask= Set which document modification events are sent to the container.
editor.Modify= read-only
editor.MouseDownCaptures= Set whether the mouse is captured when its button is pressed.
editor.MouseDwellTime= Sets the time the mouse must sit still to generate a mouse dwell event.
editor.MouseSelectionRectangularSwitch= Set whether switching to rectangular mode while selecting with the mouse is allowed.
editor.MouseWheelCaptures= Set whether the mouse wheel can be active outside the window.
editor.MoveExtendsSelection= read-only
editor.MultiPaste= Change the effect of pasting when there are multiple selections.
editor.MultipleSelection= Set whether multiple selections can be made
editor.NamedStyles= read-only
editor.Overtype= Set to overtype (true) -- or insert mode.
editor.PasteConvertEndings= Enable/Disable convert-on-paste for line endings
editor.PhasesDraw= In one phase draw text is drawn in a series of rectangular blocks with no overlap - In two phase draw text is drawn in a series of lines allowing runs to overlap horizontally - In multiple phase draw each element is drawn over the whole drawing area allowing text to overlap from one line to the next.
editor.PointXFromPosition(position pos) -- Retrieve the x value of the point in the window where a position is displayed.
editor.PointYFromPosition(position pos) -- Retrieve the y value of the point in the window where a position is displayed.
editor.PositionAfter(position pos) -- Given a valid document position return the next position taking code page into account - Maximum value returned is the last position in the document.
editor.PositionBefore(position pos) -- Given a valid document position return the previous position taking code page into account - Returns 0 if passed 0.
editor.PositionCache= Set number of entries in position cache
editor.PositionFromLine(line line) -- Retrieve the position at the start of a line.
editor.PositionFromPoint(int x int y) -- Find the position from a point within the window.
editor.PositionFromPointClose(int x int y) -- Find the position from a point within the window but return INVALID_POSITION if not close to text.
editor.PositionRelative(position pos position relative) -- Given a valid document position return a position that differs in a number of characters - Returned value is always between 0 and last position in document.
editor.PositionRelativeCodeUnits(position pos position relative) -- Given a valid document position return a position that differs in a number of UTF-16 code units - Returned value is always between 0 and last position in document - The result may point half way (2 bytes) -- inside a non-BMP character.
editor.PrimaryStyleFromStyle[int style]= read-only
editor.PrintColourMode= Modify colours when printing for clearer printed text.
editor.PrintMagnification= Sets the print magnification added to the point size of each style for printing.
editor.PrintWrapMode= Set printing to line wrapped (SC_WRAP_WORD) -- or not line wrapped (SC_WRAP_NONE).
editor.PropertyExpanded[string key]= read-only
editor.PropertyType(string name) -- Retrieve the type of a property.
editor.Property[string key]= Set up a value that may be used by a lexer for some optional feature.
editor.PunctuationChars= Set the set of characters making up punctuation characters Should be called after SetWordChars.
editor.RGBAImageHeight= write-only Set the height for future RGBA image data.
editor.RGBAImageScale= write-only Set the scale factor in percent for future RGBA image data.
editor.RGBAImageWidth= write-only Set the width for future RGBA image data.
editor.ReadOnly= Set to read only or read write.
editor.RectangularSelectionAnchor= Set the anchor position of the rectangular selection.
editor.RectangularSelectionAnchorVirtualSpace= Set the virtual space of the anchor of the rectangular selection.
editor.RectangularSelectionCaret= Set the caret position of the rectangular selection.
editor.RectangularSelectionCaretVirtualSpace= Set the virtual space of the caret of the rectangular selection.
editor.RectangularSelectionModifier= On GTK allow selecting the modifier key to use for mouse-based rectangular selection - Often the window manager requires Alt+Mouse Drag for moving windows - Valid values are SCMOD_CTRL(default) -- SCMOD_ALT or SCMOD_SUPER.
editor.ReplaceTarget(string text) -- Replace the target text with the argument text - Text is counted so it can contain NULs - Returns the length of the replacement text.
editor.ReplaceTargetRE(string text) -- Replace the target text with the argument text after \\d processing - Text is counted so it can contain NULs - Looks for \\d where d is between 1 and 9 and replaces these with the strings matched in the last search operation which were surrounded by \\( and \\) -- - Returns the length of the replacement text including any change caused by processing the \\d patterns.
editor.Representation[string encodedCharacter]= Set the way a character is drawn.
editor.ScrollWidth= Sets the document width assumed for scrolling.
editor.ScrollWidthTracking= Sets whether the maximum width line displayed is used to set scroll width.
editor.SearchFlags= Set the search flags used by SearchInTarget.
editor.SearchInTarget(string text) -- Search for a counted string in the target and set the target to the found range - Text is counted so it can contain NULs - Returns start of found range or -1 for failure in which case target is not moved.
editor.SearchNext(int searchFlags string text) -- Find some text starting at the search anchor - Does not ensure the selection is visible.
editor.SearchPrev(int searchFlags string text) -- Find some text starting at the search anchor and moving backwards - Does not ensure the selection is visible.
editor.SelAlpha= Set the alpha of the selection.
editor.SelEOLFilled= Set the selection to have its end of line filled or not.
editor.SelectionEmpty= read-only
editor.SelectionEnd= Sets the position that ends the selection - this becomes the caret.
editor.SelectionIsRectangle= read-only
editor.SelectionMode= Set the selection mode to stream (SC_SEL_STREAM) -- or rectangular (SC_SEL_RECTANGLE/SC_SEL_THIN) -- or by lines (SC_SEL_LINES).
editor.SelectionNAnchorVirtualSpace[int selection]= Set the virtual space of the anchor of the nth selection.
editor.SelectionNAnchor[int selection]= Set the anchor position of the nth selection.
editor.SelectionNCaretVirtualSpace[int selection]= Set the virtual space of the caret of the nth selection.
editor.SelectionNCaret[int selection]= Set the caret position of the nth selection.
editor.SelectionNEndVirtualSpace[int selection]-- read-only
editor.SelectionNEnd[int selection]= Sets the position that ends the selection - this becomes the currentPosition.
editor.SelectionNStartVirtualSpace[int selection]-- read-only
editor.SelectionNStart[int selection]= Sets the position that starts the selection - this becomes the anchor.
editor.SelectionStart= Sets the position that starts the selection - this becomes the anchor.
editor.Selections-- read-only
editor.Status= Change error status - 0 = OK.
editor.StyleAt[position pos]-- read-only
editor.StyleBack[int style]= Set the background colour of a style.
editor.StyleBold[int style]= Set a style to be bold or not.
editor.StyleCase[int style]= Set a style to be mixed case or to force upper or lower case.
editor.StyleChangeable[int style]= Set a style to be changeable or not (read only) -- - Experimental feature currently buggy.
editor.StyleCharacterSet[int style]= Set the character set of the font in a style.
editor.StyleEOLFilled[int style]= Set a style to have its end of line filled or not.
editor.StyleFont[int style]= Set the font of a style.
editor.StyleFore[int style]= Set the foreground colour of a style.
editor.StyleFromSubStyle[int subStyle]-- read-only
editor.StyleHotSpot[int style]= Set a style to be a hotspot or not.
editor.StyleItalic[int style]= Set a style to be italic or not.
editor.StyleSizeFractional[int style]= Set the size of characters of a style - Size is in points multiplied by 100.
editor.StyleSize[int style]= Set the size of characters of a style.
editor.StyleUnderline[int style]= Set a style to be underlined or not.
editor.StyleVisible[int style]= Set a style to be visible or not.
editor.StyleWeight[int style]= Set the weight of characters of a style.
editor.SubStyleBases-- read-only
editor.SubStylesLength[int styleBase]-- read-only
editor.SubStylesStart[int styleBase]-- read-only
editor.TabDrawMode= Set how tabs are drawn when visible.
editor.TabIndents= Sets whether a tab pressed when caret is within indentation indents.
editor.TabMinimumWidth= Set the minimum visual width of a tab.
editor.TabWidth= Change the visible size of a tab to be a multiple of the width of a space character.
editor.Tag[int tagNumber]-- read-only
editor.TargetEnd= Sets the position that ends the target which is used for updating the document without affecting the scroll position.
editor.TargetEndVirtualSpace= Sets the virtual space of the target end
editor.TargetStart= Sets the position that starts the target which is used for updating the document without affecting the scroll position.
editor.TargetStartVirtualSpace= Sets the virtual space of the target start
editor.TargetText-- read-only
editor.Technology= Set the technology used.
editor.TextHeight(line line) -- Retrieve the height of a particular line of text in pixels.
editor.TextLength-- read-only
editor.TextWidth(int style string text) -- Measure the pixel width of some text in a particular style - NUL terminated text argument - Does not handle tab or control characters.
editor.UndoCollection= Choose between collecting actions into the undo history and discarding them.
editor.UseTabs= Indentation will only use space characters if useTabs is false otherwise it will use a combination of tabs and spaces.
editor.VScrollBar= Show or hide the vertical scroll bar.
editor.ViewEOL= Make the end of line characters visible or invisible.
editor.ViewWS= Make white space characters invisible always visible or visible outside indentation.
editor.VirtualSpaceOptions= Set options for virtual space behaviour.
editor.VisibleFromDocLine(line docLine) -- Find the display line of a document line taking hidden lines into account.
editor.WhitespaceChars= Set the set of characters making up whitespace for when moving or selecting by word - Should be called after SetWordChars.
editor.WhitespaceSize= Set the size of the dots used to mark space characters.
editor.WordChars= Set the set of characters making up words for when moving or selecting by word - First sets defaults like SetCharsDefault.
editor.WordEndPosition(position pos bool onlyWordCharacters) -- Get position of end of word.
editor.WordStartPosition(position pos bool onlyWordCharacters) -- Get position of start of word.
editor.WrapCount(line docLine) -- The number of display lines needed to wrap a document line
editor.WrapIndentMode= Sets how wrapped sublines are placed - Default is fixed.
editor.WrapMode= Sets whether text is word wrapped.
editor.WrapStartIndent= Set the start indent for wrapped lines.
editor.WrapVisualFlags= Set the display mode of visual flags for wrapped lines.
editor.WrapVisualFlagsLocation= Set the location of visual flags for wrapped lines.
editor.XOffset= Set the xOffset (ie horizontal scroll position).
editor.Zoom= Set the zoom level - This number of points is added to the size of all fonts - It may be positive to magnify or negative to reduce.
editor:AddRefDocument(pointer doc) -- Extend life of document.
editor:AddSelection(position caret position anchor) -- Add a selection
editor:AddTabStop(line line int x) -- Add an explicit tab stop for a line.
editor:AddText(string text) -- Add text to the document at current position.
editor:AddUndoAction(int token int flags) -- Add a container action to the undo stack
editor:Allocate(position bytes) -- Enlarge the document to a particular size of text bytes.
editor:AllocateLineCharacterIndex(int lineCharacterIndex) -- Request line character index be created or its use count increased.
editor:AnnotationClearAll() -- Clear the annotations from all lines
editor:AppendText(string text) -- Append a string to the end of the document without changing the selection.
editor:AssignCmdKey(keymod keyDefinition int sciCommand) -- When key+modifier combination keyDefinition is pressed perform sciCommand.
editor:AutoCActive() -- Is there an auto-completion list visible?
editor:AutoCCancel() -- Remove the auto-completion list from the screen.
editor:AutoCComplete() -- User has selected an item so remove the list and insert the selection.
editor:AutoCSelect(string select) -- Select the item in the auto-completion list that starts with a string.
editor:AutoCShow(position lengthEntered string itemList) -- Display a auto-completion list - The lengthEntered parameter indicates how many characters before the caret should be used to provide context.
editor:AutoCStops(string characterSet) -- Define a set of character that when typed cancel the auto-completion list.
editor:BeginUndoAction() -- Start a sequence of actions that is undone and redone as a unit - May be nested.
editor:BraceBadLight(position pos) -- Highlight the character at a position indicating there is no matching brace.
editor:BraceBadLightIndicator(bool useSetting int indicator) -- Use specified indicator to highlight non matching brace instead of changing its style.
editor:BraceHighlight(position posA position posB) -- Highlight the characters at two positions.
editor:BraceHighlightIndicator(bool useSetting int indicator) -- Use specified indicator to highlight matching braces instead of changing their style.
editor:CallTipActive() -- Is there an active call tip?
editor:CallTipCancel() -- Remove the call tip from the screen.
editor:CallTipSetHlt(position highlightStart position highlightEnd) -- Highlight a segment of the definition.
editor:CallTipShow(position pos string definition) -- Show a call tip containing a definition near position pos.
editor:CanPaste() -- Will a paste succeed?
editor:CanRedo() -- Are there any redoable actions in the undo history?
editor:CanUndo() -- Are there any undoable actions in the undo history?
editor:ChangeInsertion(string text) -- Change the text that is being inserted in response to SC_MOD_INSERTCHECK
editor:ChooseCaretX() -- Set the last x chosen value to be the caret x position.
editor:Clear() -- Clear the selection.
editor:ClearAll() -- Delete all text in the document.
editor:ClearAllCmdKeys() -- Drop all key mappings.
editor:ClearCmdKey(keymod keyDefinition) -- When key+modifier combination keyDefinition is pressed do nothing.
editor:ClearDocumentStyle() -- Set all style bytes to 0 remove all folding information.
editor:ClearRegisteredImages() -- Clear all the registered XPM images.
editor:ClearRepresentation(string encodedCharacter) -- Remove a character representation.
editor:ClearSelections() -- Clear selections to a single empty stream selection
editor:ClearTabStops(line line) -- Clear explicit tabstops on a line.
editor:Colourise(position start position end) -- Colourise a segment of the document using the current lexing language.
editor:ConvertEOLs(int eolMode) -- Convert all line endings in the document to one mode.
editor:Copy() -- Copy the selection to the clipboard.
editor:CopyAllowLine() -- Copy the selection if selection empty copy the line with the caret
editor:CopyRange(position start position end) -- Copy a range of text to the clipboard - Positions are clipped into the document.
editor:CopyText(string text) -- Copy argument text to the clipboard.
editor:Cut() -- Cut the selection to the clipboard.
editor:DeleteRange(position start position lengthDelete) -- Delete a range of text in the document.
editor:DescribeKeyWordSets() -- Retrieve a '\\n' separated list of descriptions of the keyword sets understood by the current lexer - Result is NUL-terminated.
editor:DescribeProperty(string name) -- Describe a property - Result is NUL-terminated.
editor:DescriptionOfStyle(int style) -- Retrieve a description of a style - Result is NUL-terminated.
editor:DropSelectionN(int selection) -- Drop one selection
editor:EmptyUndoBuffer() -- Delete the undo history.
editor:EncodedFromUTF8(string utf8) -- Translates a UTF8 string into the document encoding - Return the length of the result in bytes - On error return 0.
editor:EndUndoAction() -- End a sequence of actions that is undone and redone as a unit.
editor:EnsureVisible(line line) -- Ensure a particular line is visible by expanding any header line hiding it.
editor:EnsureVisibleEnforcePolicy(line line) -- Ensure a particular line is visible by expanding any header line hiding it - Use the currently set visibility policy to determine which range to display.
editor:ExpandChildren(line line int level) -- Expand a fold header and all children - Use the level argument instead of the line's current level.
editor:FindIndicatorFlash(position start position end) -- On OS X flash a find indicator then fade out.
editor:FindIndicatorHide() -- On OS X hide the find indicator.
editor:FindIndicatorShow(position start position end) -- On OS X show a find indicator.
editor:FoldAll(int action) -- Expand or contract all fold headers.
editor:FoldChildren(line line int action) -- Expand or contract a fold header and its children.
editor:FoldLine(line line int action) -- Expand or contract a fold header.
editor:FreeSubStyles() -- Free allocated sub styles
editor:GetCurLine() -- Retrieve the text of the line containing the caret - Returns the index of the caret on the line - Result is NUL-terminated.
editor:GetDefaultFoldDisplayText() -- Get the default fold display text.
editor:GetHotspotActiveBack() -- Get the back colour for active hotspots.
editor:GetHotspotActiveFore() -- Get the fore colour for active hotspots.
editor:GetLine(line line) -- Retrieve the contents of a line - Returns the length of the line.
editor:GetSelText() -- Retrieve the selected text - Return the length of the text - Result is NUL-terminated.
editor:GetText() -- Retrieve all the text in the document - Returns number of characters retrieved - Result is NUL-terminated.
editor:GotoLine(line line) -- Set caret to start of a line and ensure it is visible.
editor:GotoPos(position caret) -- Set caret to a position and ensure it is visible.
editor:GrabFocus() -- Set the focus to this Scintilla widget.
editor:HideLines(line lineStart line lineEnd) -- Make a range of lines invisible.
editor:HideSelection(bool hide) -- Draw the selection either highlighted or in normal (non-highlighted) -- style.
editor:IndicatorClearRange(position start position lengthClear) -- Turn a indicator off over a range.
editor:IndicatorFillRange(position start position lengthFill) -- Turn a indicator on over a range.
editor:InsertText(position pos string text) -- Insert string at a position.
editor:IsRangeWord(position start position end) -- Is the range start..end considered a word?
editor:LineScroll(position columns line lines) -- Scroll horizontally and vertically.
editor:LinesJoin() -- Join the lines in the target.
editor:LinesSplit(int pixelWidth) -- Split the lines in the target into lines that are less wide than pixelWidth where possible.
editor:LoadLexerLibrary(string path) -- Load a lexer library (dll / so).
editor:MarginTextClearAll() -- Clear the margin text on all lines
editor:MarkerAddSet(line line int markerSet) -- Add a set of markers to a line.
editor:MarkerDefine(int markerNumber int markerSymbol) -- Set the symbol used for a particular marker number.
editor:MarkerDefinePixmap(int markerNumber string pixmap) -- Define a marker from a pixmap.
editor:MarkerDefineRGBAImage(int markerNumber string pixels) -- Define a marker from RGBA data - It has the width and height from RGBAImageSetWidth/Height
editor:MarkerDelete(line line int markerNumber) -- Delete a marker from a line.
editor:MarkerDeleteAll(int markerNumber) -- Delete all markers with a particular number from all lines.
editor:MarkerDeleteHandle(int markerHandle) -- Delete a marker.
editor:MarkerEnableHighlight(bool enabled) -- Enable/disable highlight for current folding block (smallest one that contains the caret)
editor:MoveCaretInsideView() -- Move the caret inside current view if it's not there already.
editor:MoveSelectedLinesDown() -- Move the selected lines down one line shifting the line below before the selection
editor:MoveSelectedLinesUp() -- Move the selected lines up one line shifting the line above after the selection
editor:MultiEdgeAddLine(position column colour edgeColour) -- Add a new vertical edge to the view.
editor:MultiEdgeClearAll() -- Clear all vertical edges.
editor:MultipleSelectAddEach() -- Add each occurrence of the main selection in the target to the set of selections - If the current selection is empty then select word around caret.
editor:MultipleSelectAddNext() -- Add the next occurrence of the main selection to the set of selections as main - If the current selection is empty then select word around caret.
editor:NameOfStyle(int style) -- Retrieve the name of a style - Result is NUL-terminated.
editor:Null() -- Null operation.
editor:Paste() -- Paste the contents of the clipboard into the document replacing the selection.
editor:PropertyNames() -- Retrieve a '\\n' separated list of properties understood by the current lexer - Result is NUL-terminated.
editor:Redo() -- Redoes the next action on the undo history.
editor:RegisterImage(int type string xpmData) -- Register an XPM image for use in autocompletion lists.
editor:RegisterRGBAImage(int type string pixels) -- Register an RGBA image for use in autocompletion lists - It has the width and height from RGBAImageSetWidth/Height
editor:ReleaseAllExtendedStyles() -- Release all extended (>255) -- style numbers
editor:ReleaseDocument(pointer doc) -- Release a reference to the document deleting document if it fades to black.
editor:ReleaseLineCharacterIndex(int lineCharacterIndex) -- Decrease use count of line character index and remove if 0.
editor:ReplaceSel(string text) -- Replace the selected text with the argument text.
editor:RotateSelection() -- Set the main selection to the next selection.
editor:ScrollCaret() -- Ensure the caret is visible.
editor:ScrollRange(position secondary position primary) -- Scroll the argument positions and the range between them into view giving priority to the primary position then the secondary position - This may be used to make a search match visible.
editor:SearchAnchor() -- Sets the current caret position to be the search anchor.
editor:SelectAll() -- Select all the text in the document.
editor:SetCharsDefault() -- Reset the set of characters for whitespace and word characters to the defaults.
editor:SetDefaultFoldDisplayText(string text) -- Set the default fold display text.
editor:SetEmptySelection(position caret) -- Set caret to a position while removing any existing selection.
editor:SetFoldMarginColour(bool useSetting colour back) -- Set one of the colours used as a chequerboard pattern in the fold margin
editor:SetFoldMarginHiColour(bool useSetting colour fore) -- Set the other colour used as a chequerboard pattern in the fold margin
editor:SetHotspotActiveBack(bool useSetting colour back) -- Set a back colour for active hotspots.
editor:SetHotspotActiveFore(bool useSetting colour fore) -- Set a fore colour for active hotspots.
editor:SetLengthForEncode(position bytes) -- Set the length of the utf8 argument for calling EncodedFromUTF8 - Set to -1 and the string will be measured to the first nul.
editor:SetSavePoint() -- Remember the current position in the undo history as the position at which the document was saved.
editor:SetSel(position anchor position caret) -- Select a range of text.
editor:SetSelBack(bool useSetting colour back) -- Set the background colour of the main and additional selections and whether to use this setting.
editor:SetSelFore(bool useSetting colour fore) -- Set the foreground colour of the main and additional selections and whether to use this setting.
editor:SetSelection(position caret position anchor) -- Set a simple selection
editor:SetStyling(position length int style) -- Change style from current styling position for length characters to a style and move the current styling position to after this newly styled segment.
editor:SetStylingEx(string styles) -- Set the styles for a segment of the document.
editor:SetTargetRange(position start position end) -- Sets both the start and end of the target in one call.
editor:SetText(string text) -- Replace the contents of the document with the argument text.
editor:SetVisiblePolicy(int visiblePolicy int visibleSlop) -- Set the way the display area is determined when a particular line is to be moved to by Find FindNext GotoLine etc.
editor:SetWhitespaceBack(bool useSetting colour back) -- Set the background colour of all whitespace and whether to use this setting.
editor:SetWhitespaceFore(bool useSetting colour fore) -- Set the foreground colour of all whitespace and whether to use this setting.
editor:SetXCaretPolicy(int caretPolicy int caretSlop) -- Set the way the caret is kept visible when going sideways - The exclusion zone is given in pixels.
editor:SetYCaretPolicy(int caretPolicy int caretSlop) -- Set the way the line the caret is on is kept visible - The exclusion zone is given in lines.
editor:ShowLines(line lineStart line lineEnd) -- Make a range of lines visible.
editor:StartRecord() -- Start notifying the container of all key presses and commands.
editor:StartStyling(position start int unused) -- Set the current styling position to start - The unused parameter is no longer used and should be set to 0.
editor:StopRecord() -- Stop notifying the container of all key presses and commands.
editor:StyleClearAll() -- Clear all the styles and make equivalent to the global default style.
editor:StyleResetDefault() -- Reset the default style to its state at startup
editor:SwapMainAnchorCaret() -- Swap that caret and anchor of the main selection.
editor:TagsOfStyle(int style) -- Retrieve a ' ' separated list of style tags like "literal quoted string" - Result is NUL-terminated.
editor:TargetAsUTF8() -- Returns the target converted to UTF8 - Return the length in bytes.
editor:TargetFromSelection() -- Make the target range start and end be the same as the selection range start and end.
editor:TargetWholeDocument() -- Sets the target to the whole document.
editor:ToggleCaretSticky() -- Switch between sticky and non-sticky: meant to be bound to a key.
editor:ToggleFold(line line) -- Switch a header line between expanded and contracted.
editor:ToggleFoldShowText(line line string text) -- Switch a header line between expanded and contracted and show some text after the line.
editor:Undo() -- Undo one action in the undo history.
editor:UsePopUp(int popUpMode) -- Set whether a pop up menu is displayed automatically when the user presses the wrong mouse button on certain areas.
editor:UserListShow(int listType string itemList) -- Display a list of strings and send notification when user chooses one.
editor:ZoomIn() -- Magnify the displayed text by increasing the sizes by 1 point.
editor:ZoomOut() -- Make the displayed text smaller by decreasing the sizes by 1 point.
editor:append(text) -- appends text to the end of the document
editor:findtext(text [SCFIND flags] [startPos [endPos]]) -- returns the start and end of the first match or nil if no match
editor:insert(pos text) -- inserts text at the specified position
editor:match(text [flags] [startPos]) -- returns iterator i.e - for m in editor:match(text flags) -- do .. - end
editor:remove(startPos endPos) -- removes the text in the range
editor:textrange(startPos endPos) -- gets the text in the specified range
output.Accessibility= Enable or disable accessibility.
output.AdditionalCaretFore= Set the foreground colour of additional carets.
output.AdditionalCaretsBlink= Set whether additional carets will blink
output.AdditionalCaretsVisible= Set whether additional carets are visible
output.AdditionalSelAlpha= Set the alpha of the selection.
output.AdditionalSelBack= write-only Set the background colour of additional selections - Must have previously called SetSelBack with non-zero first argument for this to have an effect.
output.AdditionalSelFore= write-only Set the foreground colour of additional selections - Must have previously called SetSelFore with non-zero first argument for this to have an effect.
output.AdditionalSelectionTyping= Set whether typing can be performed into multiple selections
output.AllLinesVisible-- read-only
output.AllocateExtendedStyles(int numberStyles) -- Allocate some extended (>255) -- style numbers and return the start of the range
output.AllocateSubStyles(int styleBase int numberStyles) -- Allocate a set of sub styles for a particular base style returning start of range
output.Anchor= Set the selection anchor to a position - The anchor is the opposite end of the selection from the caret.
output.AnnotationLines[line line]-- read-only
output.AnnotationStyleOffset= Get the start of the range of style numbers used for annotations
output.AnnotationStyle[line line]= Set the style number for the annotations for a line
output.AnnotationStyles[line line]= Set the annotation styles for a line
output.AnnotationText[line line]= Set the annotation text for a line
output.AnnotationVisible= Set the visibility for the annotations for a view
output.AutoCAutoHide= Set whether or not autocompletion is hidden automatically when nothing matches.
output.AutoCCancelAtStart= Should the auto-completion list be cancelled if the user backspaces to a position before where the box was created.
output.AutoCCaseInsensitiveBehaviour= Set auto-completion case insensitive behaviour to either prefer case-sensitive matches or have no preference.
output.AutoCChooseSingle= Should a single item auto-completion list automatically choose the item.
output.AutoCCurrent-- read-only
output.AutoCCurrentText-- read-only
output.AutoCDropRestOfWord= Set whether or not autocompletion deletes any word characters after the inserted text upon completion.
output.AutoCFillUps= write-only Define a set of characters that when typed will cause the autocompletion to choose the selected item.
output.AutoCIgnoreCase= Set whether case is significant when performing auto-completion searches.
output.AutoCMaxHeight= Set the maximum height in rows of auto-completion and user lists - The default is 5 rows.
output.AutoCMaxWidth= Set the maximum width in characters of auto-completion and user lists - Set to 0 to autosize to fit longest item which is the default.
output.AutoCMulti= Change the effect of autocompleting when there are multiple selections.
output.AutoCOrder= Set the way autocompletion lists are ordered.
output.AutoCPosStart() -- Retrieve the position of the caret when the auto-completion list was displayed.
output.AutoCSeparator= Change the separator character in the string setting up an auto-completion list - Default is space but can be changed if items contain space.
output.AutoCTypeSeparator= Change the type-separator character in the string setting up an auto-completion list - Default is '?' but can be changed if items contain '?'.
output.AutomaticFold= Set automatic folding behaviours.
output.BackSpaceUnIndents= Sets whether a backspace pressed when caret is within indentation unindents.
output.Bidirectional= Set bidirectional text display state.
output.BraceMatch(position pos int maxReStyle) -- Find the position of a matching brace or INVALID_POSITION if no match - The maxReStyle must be 0 for now - It may be defined in a future release.
output.BufferedDraw= If drawing is buffered then each line of text is drawn into a bitmap buffer before drawing it to the screen to avoid flicker.
output.CallTipBack= write-only Set the background colour for the call tip.
output.CallTipFore= write-only Set the foreground colour for the call tip.
output.CallTipForeHlt= write-only Set the foreground colour for the highlighted part of the call tip.
output.CallTipPosStart= write-only Set the start position in order to change when backspacing removes the calltip.
output.CallTipPosStart() -- Retrieve the position where the caret was before displaying the call tip.
output.CallTipPosition= write-only Set position of calltip above or below text.
output.CallTipUseStyle= write-only Enable use of STYLE_CALLTIP and set call tip tab size in pixels.
output.CaretFore= Set the foreground colour of the caret.
output.CaretLineBack= Set the colour of the background of the line containing the caret.
output.CaretLineBackAlpha= Set background alpha of the caret line.
output.CaretLineFrame= Display the caret line framed - Set width != 0 to enable this option and width = 0 to disable it.
output.CaretLineVisible= Display the background of the line containing the caret in a different colour.
output.CaretLineVisibleAlways= Sets the caret line to always visible.
output.CaretPeriod= Get the time in milliseconds that the caret is on and off - 0 = steady on.
output.CaretSticky= Stop the caret preferred x position changing when the user types.
output.CaretStyle= Set the style of the caret to be drawn.
output.CaretWidth= Set the width of the insert mode caret.
output.ChangeLexerState(position start position end) -- Indicate that the internal state of a lexer has changed over a range and therefore there may be a need to redraw.
output.CharAt[position pos]-- read-only
output.CharPositionFromPoint(int x int y) -- Find the position of a character from a point within the window.
output.CharPositionFromPointClose(int x int y) -- Find the position of a character from a point within the window - Return INVALID_POSITION if not close to text.
output.CharacterCategoryOptimization= Set the number of characters to have directly indexed categories
output.CodePage= Set the code page used to interpret the bytes of the document as characters - The SC_CP_UTF8 value can be used to enter Unicode mode.
output.Column[position pos]-- read-only
output.CommandEvents= Set whether command events are sent to the container.
output.ContractedFoldNext(line lineStart) -- Find the next line at or after lineStart that is a contracted fold header line - Return -1 when no more lines.
output.ControlCharSymbol= Change the way control characters are displayed: If symbol is < 32 keep the drawn way else use the given character.
output.CountCharacters(position start position end) -- Count characters between two positions.
output.CountCodeUnits(position start position end) -- Count code units between two positions.
output.CurrentPos= Sets the position of the caret.
output.Cursor= Sets the cursor to one of the SC_CURSOR* values.
output.DistanceToSecondaryStyles-- read-only
output.DocLineFromVisible(line displayLine) -- Find the document line of a display line taking hidden lines into account.
output.DocumentOptions-- read-only
output.EOLMode= Set the current end of line mode.
output.EdgeColour= Change the colour used in edge indication.
output.EdgeColumn= Set the column number of the edge - If text goes past the edge then it is highlighted.
output.EdgeMode= The edge may be displayed by a line (EDGE_LINE/EDGE_MULTILINE) -- or by highlighting text that goes beyond it (EDGE_BACKGROUND) -- or not displayed at all (EDGE_NONE).
output.EndAtLastLine= Sets the scroll range so that maximum scroll position has the last line at the bottom of the view (default) -- - Setting this to false allows scrolling one page below the last line.
output.EndStyled-- read-only
output.ExtraAscent= Set extra ascent for each line
output.ExtraDescent= Set extra descent for each line
output.FindColumn(line line position column) -- Find the position of a column on a line taking into account tabs and multi-byte characters - If beyond end of line return line end position.
output.FirstVisibleLine= Scroll so that a display line is at the top of the display.
output.Focus= Change internal focus flag.
output.FoldDisplayTextStyle= Set the style of fold display text.
output.FoldExpanded[line line]= Show the children of a header line.
output.FoldFlags= write-only Set some style options for folding.
output.FoldLevel[line line]= Set the fold level of a line - This encodes an integer level along with flags indicating whether the line is a header and whether it is effectively white space.
output.FoldParent[line line]-- read-only
output.FontQuality= Choose the quality level for text from the FontQuality enumeration.
output.GapPosition-- read-only
output.GetLastChild(line line int level) -- Find the last child line of a header line.
output.GetLineSelEndPosition(line line) -- Retrieve the position of the end of the selection at the given line (INVALID_POSITION if no selection on this line).
output.GetLineSelStartPosition(line line) -- Retrieve the position of the start of the selection at the given line (INVALID_POSITION if no selection on this line).
output.GetNextTabStop(line line int x) -- Find the next explicit tab stop position on a line after a position.
output.GetPropertyInt(string key int defaultValue) -- Retrieve a "property" value previously set with SetProperty interpreted as an int AFTER any "$()" variable replacement.
output.HScrollBar= Show or hide the horizontal scroll bar.
output.HighlightGuide= Set the highlighted indentation guide column - 0 = no highlighted guide.
output.HotspotActiveUnderline= Enable / Disable underlining active hotspots.
output.HotspotSingleLine= Limit hotspots to single line so hotspots on two lines don't merge.
output.IMEInteraction= Choose to display the IME in a window or inline.
output.Identifier= Set the identifier reported as idFrom in notification messages.
output.Identifiers[int style]= write-only Set the identifiers that are shown in a particular style
output.IdleStyling= Sets limits to idle styling.
output.Indent= Set the number of spaces used for one level of indentation.
output.IndentationGuides= Show or hide indentation guides.
output.IndexPositionFromLine(line line int lineCharacterIndex) -- Retrieve the position measured in index units at the start of a document line.
output.IndicAlpha[int indicator]= Set the alpha fill colour of the given indicator.
output.IndicFlags[int indicator]= Set the attributes of an indicator.
output.IndicFore[int indicator]= Set the foreground colour of an indicator.
output.IndicHoverFore[int indicator]= Set the foreground hover colour of an indicator.
output.IndicHoverStyle[int indicator]= Set a hover indicator to plain squiggle or TT.
output.IndicOutlineAlpha[int indicator]= Set the alpha outline colour of the given indicator.
output.IndicStyle[int indicator]= Set an indicator to plain squiggle or TT.
output.IndicUnder[int indicator]= Set an indicator to draw under text or over(default).
output.IndicatorAllOnFor(position pos) -- Are any indicators present at pos?
output.IndicatorCurrent= Set the indicator used for IndicatorFillRange and IndicatorClearRange
output.IndicatorEnd(int indicator position pos) -- Where does a particular indicator end?
output.IndicatorStart(int indicator position pos) -- Where does a particular indicator start?
output.IndicatorValue= Set the value used for IndicatorFillRange
output.IndicatorValueAt(int indicator position pos) -- What value does a particular indicator have at a position?
output.KeyWords[int keyWordSet]= write-only Set up the key words used by the lexer.
output.LayoutCache= Sets the degree of caching of layout information.
output.Length-- read-only
output.Lexer= Set the lexing language of the document.
output.LexerLanguage= Set the lexing language of the document based on string name.
output.LineCharacterIndex-- read-only
output.LineCount-- read-only
output.LineEndPosition[line line]-- read-only
output.LineEndTypesActive-- read-only
output.LineEndTypesAllowed= Set the line end types that the application wants to use - May not be used if incompatible with lexer or encoding.
output.LineEndTypesSupported-- read-only
output.LineFromIndexPosition(position pos int lineCharacterIndex) -- Retrieve the document line containing a position measured in index units.
output.LineFromPosition(position pos) -- Retrieve the line containing a position.
output.LineIndentPosition[line line]-- read-only
output.LineIndentation[line line]= Change the indentation of a line to a number of columns.
output.LineLength(line line) -- How many characters are on a line including end of line characters?
output.LineState[line line]= Used to hold extra styling information for each line.
output.LineVisible[line line]-- read-only
output.LinesOnScreen-- read-only
output.MainSelection= Set the main selection
output.MarginBackN[int margin]= Set the background colour of a margin - Only visible for SC_MARGIN_COLOUR.
output.MarginCursorN[int margin]= Set the cursor shown when the mouse is inside a margin.
output.MarginLeft= Sets the size in pixels of the left margin.
output.MarginMaskN[int margin]= Set a mask that determines which markers are displayed in a margin.
output.MarginOptions= Set the margin options.
output.MarginRight= Sets the size in pixels of the right margin.
output.MarginSensitiveN[int margin]= Make a margin sensitive or insensitive to mouse clicks.
output.MarginStyleOffset= Get the start of the range of style numbers used for margin text
output.MarginStyle[line line]= Set the style number for the text margin for a line
output.MarginStyles[line line]= Set the style in the text margin for a line
output.MarginText[line line]= Set the text in the text margin for a line
output.MarginTypeN[int margin]= Set a margin to be either numeric or symbolic.
output.MarginWidthN[int margin]= Set the width of a margin to a width expressed in pixels.
output.Margins= Allocate a non-standard number of margins.
output.MarkerAdd(line line int markerNumber) -- Add a marker to a line returning an ID which can be used to find or delete the marker.
output.MarkerAlpha[int markerNumber]= write-only Set the alpha used for a marker that is drawn in the text area not the margin.
output.MarkerBackSelected[int markerNumber]= write-only Set the background colour used for a particular marker number when its folding block is selected.
output.MarkerBack[int markerNumber]= write-only Set the background colour used for a particular marker number.
output.MarkerFore[int markerNumber]= write-only Set the foreground colour used for a particular marker number.
output.MarkerGet(line line) -- Get a bit mask of all the markers set on a line.
output.MarkerHandleFromLine(line line int which) -- Retrieve marker handles of a line
output.MarkerLineFromHandle(int markerHandle) -- Retrieve the line number at which a particular marker is located.
output.MarkerNext(line lineStart int markerMask) -- Find the next line at or after lineStart that includes a marker in mask - Return -1 when no more lines.
output.MarkerNumberFromLine(line line int which) -- Retrieve marker number of a marker handle
output.MarkerPrevious(line lineStart int markerMask) -- Find the previous line before lineStart that includes a marker in mask.
output.MarkerSymbolDefined(int markerNumber) -- Which symbol was defined for markerNumber with MarkerDefine
output.MaxLineState-- read-only
output.ModEventMask= Set which document modification events are sent to the container.
output.Modify-- read-only
output.MouseDownCaptures= Set whether the mouse is captured when its button is pressed.
output.MouseDwellTime= Sets the time the mouse must sit still to generate a mouse dwell event.
output.MouseSelectionRectangularSwitch= Set whether switching to rectangular mode while selecting with the mouse is allowed.
output.MouseWheelCaptures= Set whether the mouse wheel can be active outside the window.
output.MoveExtendsSelection-- read-only
output.MultiPaste= Change the effect of pasting when there are multiple selections.
output.MultipleSelection= Set whether multiple selections can be made
output.NamedStyles-- read-only
output.Overtype= Set to overtype (true) -- or insert mode.
output.PasteConvertEndings= Enable/Disable convert-on-paste for line endings
output.PhasesDraw= In one phase draw text is drawn in a series of rectangular blocks with no overlap - In two phase draw text is drawn in a series of lines allowing runs to overlap horizontally - In multiple phase draw each element is drawn over the whole drawing area allowing text to overlap from one line to the next.
output.PointXFromPosition(position pos) -- Retrieve the x value of the point in the window where a position is displayed.
output.PointYFromPosition(position pos) -- Retrieve the y value of the point in the window where a position is displayed.
output.PositionAfter(position pos) -- Given a valid document position return the next position taking code page into account - Maximum value returned is the last position in the document.
output.PositionBefore(position pos) -- Given a valid document position return the previous position taking code page into account - Returns 0 if passed 0.
output.PositionCache= Set number of entries in position cache
output.PositionFromLine(line line) -- Retrieve the position at the start of a line.
output.PositionFromPoint(int x int y) -- Find the position from a point within the window.
output.PositionFromPointClose(int x int y) -- Find the position from a point within the window but return INVALID_POSITION if not close to text.
output.PositionRelative(position pos position relative) -- Given a valid document position return a position that differs in a number of characters - Returned value is always between 0 and last position in document.
output.PositionRelativeCodeUnits(position pos position relative) -- Given a valid document position return a position that differs in a number of UTF-16 code units - Returned value is always between 0 and last position in document - The result may point half way (2 bytes) -- inside a non-BMP character.
output.PrimaryStyleFromStyle[int style]-- read-only
output.PrintColourMode= Modify colours when printing for clearer printed text.
output.PrintMagnification= Sets the print magnification added to the point size of each style for printing.
output.PrintWrapMode= Set printing to line wrapped (SC_WRAP_WORD) -- or not line wrapped (SC_WRAP_NONE).
output.PropertyExpanded[string key]-- read-only
output.PropertyType(string name) -- Retrieve the type of a property.
output.Property[string key]= Set up a value that may be used by a lexer for some optional feature.
output.PunctuationChars= Set the set of characters making up punctuation characters Should be called after SetWordChars.
output.RGBAImageHeight= write-only Set the height for future RGBA image data.
output.RGBAImageScale= write-only Set the scale factor in percent for future RGBA image data.
output.RGBAImageWidth= write-only Set the width for future RGBA image data.
output.ReadOnly= Set to read only or read write.
output.RectangularSelectionAnchor= Set the anchor position of the rectangular selection.
output.RectangularSelectionAnchorVirtualSpace= Set the virtual space of the anchor of the rectangular selection.
output.RectangularSelectionCaret= Set the caret position of the rectangular selection.
output.RectangularSelectionCaretVirtualSpace= Set the virtual space of the caret of the rectangular selection.
output.RectangularSelectionModifier= On GTK allow selecting the modifier key to use for mouse-based rectangular selection - Often the window manager requires Alt+Mouse Drag for moving windows - Valid values are SCMOD_CTRL(default) -- SCMOD_ALT or SCMOD_SUPER.
output.ReplaceTarget(string text) -- Replace the target text with the argument text - Text is counted so it can contain NULs - Returns the length of the replacement text.
output.ReplaceTargetRE(string text) -- Replace the target text with the argument text after \\d processing - Text is counted so it can contain NULs - Looks for \\d where d is between 1 and 9 and replaces these with the strings matched in the last search operation which were surrounded by \\( and \\) -- - Returns the length of the replacement text including any change caused by processing the \\d patterns.
output.Representation[string encodedCharacter]= Set the way a character is drawn.
output.ScrollWidth= Sets the document width assumed for scrolling.
output.ScrollWidthTracking= Sets whether the maximum width line displayed is used to set scroll width.
output.SearchFlags= Set the search flags used by SearchInTarget.
output.SearchInTarget(string text) -- Search for a counted string in the target and set the target to the found range - Text is counted so it can contain NULs - Returns start of found range or -1 for failure in which case target is not moved.
output.SearchNext(int searchFlags string text) -- Find some text starting at the search anchor - Does not ensure the selection is visible.
output.SearchPrev(int searchFlags string text) -- Find some text starting at the search anchor and moving backwards - Does not ensure the selection is visible.
output.SelAlpha= Set the alpha of the selection.
output.SelEOLFilled= Set the selection to have its end of line filled or not.
output.SelectionEmpty-- read-only
output.SelectionEnd= Sets the position that ends the selection - this becomes the caret.
output.SelectionIsRectangle-- read-only
output.SelectionMode= Set the selection mode to stream (SC_SEL_STREAM) -- or rectangular (SC_SEL_RECTANGLE/SC_SEL_THIN) -- or by lines (SC_SEL_LINES).
output.SelectionNAnchorVirtualSpace[int selection]= Set the virtual space of the anchor of the nth selection.
output.SelectionNAnchor[int selection]= Set the anchor position of the nth selection.
output.SelectionNCaretVirtualSpace[int selection]= Set the virtual space of the caret of the nth selection.
output.SelectionNCaret[int selection]= Set the caret position of the nth selection.
output.SelectionNEndVirtualSpace[int selection]-- read-only
output.SelectionNEnd[int selection]= Sets the position that ends the selection - this becomes the currentPosition.
output.SelectionNStartVirtualSpace[int selection]-- read-only
output.SelectionNStart[int selection]= Sets the position that starts the selection - this becomes the anchor.
output.SelectionStart= Sets the position that starts the selection - this becomes the anchor.
output.Selections-- read-only
output.Status= Change error status - 0 = OK.
output.StyleAt[position pos]-- read-only
output.StyleBack[int style]= Set the background colour of a style.
output.StyleBold[int style]= Set a style to be bold or not.
output.StyleCase[int style]= Set a style to be mixed case or to force upper or lower case.
output.StyleChangeable[int style]= Set a style to be changeable or not (read only) -- - Experimental feature currently buggy.
output.StyleCharacterSet[int style]= Set the character set of the font in a style.
output.StyleEOLFilled[int style]= Set a style to have its end of line filled or not.
output.StyleFont[int style]= Set the font of a style.
output.StyleFore[int style]= Set the foreground colour of a style.
output.StyleFromSubStyle[int subStyle]-- read-only
output.StyleHotSpot[int style]= Set a style to be a hotspot or not.
output.StyleItalic[int style]= Set a style to be italic or not.
output.StyleSizeFractional[int style]= Set the size of characters of a style - Size is in points multiplied by 100.
output.StyleSize[int style]= Set the size of characters of a style.
output.StyleUnderline[int style]= Set a style to be underlined or not.
output.StyleVisible[int style]= Set a style to be visible or not.
output.StyleWeight[int style]= Set the weight of characters of a style.
output.SubStyleBases-- read-only
output.SubStylesLength[int styleBase]-- read-only
output.SubStylesStart[int styleBase]-- read-only
output.TabDrawMode= Set how tabs are drawn when visible.
output.TabIndents= Sets whether a tab pressed when caret is within indentation indents.
output.TabMinimumWidth= Set the minimum visual width of a tab.
output.TabWidth= Change the visible size of a tab to be a multiple of the width of a space character.
output.Tag[int tagNumber]-- read-only
output.TargetEnd= Sets the position that ends the target which is used for updating the document without affecting the scroll position.
output.TargetEndVirtualSpace= Sets the virtual space of the target end
output.TargetStart= Sets the position that starts the target which is used for updating the document without affecting the scroll position.
output.TargetStartVirtualSpace= Sets the virtual space of the target start
output.TargetText-- read-only
output.Technology= Set the technology used.
output.TextHeight(line line) -- Retrieve the height of a particular line of text in pixels.
output.TextLength-- read-only
output.TextWidth(int style string text) -- Measure the pixel width of some text in a particular style - NUL terminated text argument - Does not handle tab or control characters.
output.UndoCollection= Choose between collecting actions into the undo history and discarding them.
output.UseTabs= Indentation will only use space characters if useTabs is false otherwise it will use a combination of tabs and spaces.
output.VScrollBar= Show or hide the vertical scroll bar.
output.ViewEOL= Make the end of line characters visible or invisible.
output.ViewWS= Make white space characters invisible always visible or visible outside indentation.
output.VirtualSpaceOptions= Set options for virtual space behaviour.
output.VisibleFromDocLine(line docLine) -- Find the display line of a document line taking hidden lines into account.
output.WhitespaceChars= Set the set of characters making up whitespace for when moving or selecting by word - Should be called after SetWordChars.
output.WhitespaceSize= Set the size of the dots used to mark space characters.
output.WordChars= Set the set of characters making up words for when moving or selecting by word - First sets defaults like SetCharsDefault.
output.WordEndPosition(position pos bool onlyWordCharacters) -- Get position of end of word.
output.WordStartPosition(position pos bool onlyWordCharacters) -- Get position of start of word.
output.WrapCount(line docLine) -- The number of display lines needed to wrap a document line
output.WrapIndentMode= Sets how wrapped sublines are placed - Default is fixed.
output.WrapMode= Sets whether text is word wrapped.
output.WrapStartIndent= Set the start indent for wrapped lines.
output.WrapVisualFlags= Set the display mode of visual flags for wrapped lines.
output.WrapVisualFlagsLocation= Set the location of visual flags for wrapped lines.
output.XOffset= Set the xOffset (ie horizontal scroll position).
output.Zoom= Set the zoom level - This number of points is added to the size of all fonts - It may be positive to magnify or negative to reduce.
output:AddRefDocument(pointer doc) -- Extend life of document.
output:AddSelection(position caret position anchor) -- Add a selection
output:AddTabStop(line line int x) -- Add an explicit tab stop for a line.
output:AddText(string text) -- Add text to the document at current position.
output:AddUndoAction(int token int flags) -- Add a container action to the undo stack
output:Allocate(position bytes) -- Enlarge the document to a particular size of text bytes.
output:AllocateLineCharacterIndex(int lineCharacterIndex) -- Request line character index be created or its use count increased.
output:AnnotationClearAll() -- Clear the annotations from all lines
output:AppendText(string text) -- Append a string to the end of the document without changing the selection.
output:AssignCmdKey(keymod keyDefinition int sciCommand) -- When key+modifier combination keyDefinition is pressed perform sciCommand.
output:AutoCActive() -- Is there an auto-completion list visible?
output:AutoCCancel() -- Remove the auto-completion list from the screen.
output:AutoCComplete() -- User has selected an item so remove the list and insert the selection.
output:AutoCSelect(string select) -- Select the item in the auto-completion list that starts with a string.
output:AutoCShow(position lengthEntered string itemList) -- Display a auto-completion list - The lengthEntered parameter indicates how many characters before the caret should be used to provide context.
output:AutoCStops(string characterSet) -- Define a set of character that when typed cancel the auto-completion list.
output:BeginUndoAction() -- Start a sequence of actions that is undone and redone as a unit - May be nested.
output:BraceBadLight(position pos) -- Highlight the character at a position indicating there is no matching brace.
output:BraceBadLightIndicator(bool useSetting int indicator) -- Use specified indicator to highlight non matching brace instead of changing its style.
output:BraceHighlight(position posA position posB) -- Highlight the characters at two positions.
output:BraceHighlightIndicator(bool useSetting int indicator) -- Use specified indicator to highlight matching braces instead of changing their style.
output:CallTipActive() -- Is there an active call tip?
output:CallTipCancel() -- Remove the call tip from the screen.
output:CallTipSetHlt(position highlightStart position highlightEnd) -- Highlight a segment of the definition.
output:CallTipShow(position pos string definition) -- Show a call tip containing a definition near position pos.
output:CanPaste() -- Will a paste succeed?
output:CanRedo() -- Are there any redoable actions in the undo history?
output:CanUndo() -- Are there any undoable actions in the undo history?
output:ChangeInsertion(string text) -- Change the text that is being inserted in response to SC_MOD_INSERTCHECK
output:ChooseCaretX() -- Set the last x chosen value to be the caret x position.
output:Clear() -- Clear the selection.
output:ClearAll() -- Delete all text in the document.
output:ClearAllCmdKeys() -- Drop all key mappings.
output:ClearCmdKey(keymod keyDefinition) -- When key+modifier combination keyDefinition is pressed do nothing.
output:ClearDocumentStyle() -- Set all style bytes to 0 remove all folding information.
output:ClearRegisteredImages() -- Clear all the registered XPM images.
output:ClearRepresentation(string encodedCharacter) -- Remove a character representation.
output:ClearSelections() -- Clear selections to a single empty stream selection
output:ClearTabStops(line line) -- Clear explicit tabstops on a line.
output:Colourise(position start position end) -- Colourise a segment of the document using the current lexing language.
output:ConvertEOLs(int eolMode) -- Convert all line endings in the document to one mode.
output:Copy() -- Copy the selection to the clipboard.
output:CopyAllowLine() -- Copy the selection if selection empty copy the line with the caret
output:CopyRange(position start position end) -- Copy a range of text to the clipboard - Positions are clipped into the document.
output:CopyText(string text) -- Copy argument text to the clipboard.
output:Cut() -- Cut the selection to the clipboard.
output:DeleteRange(position start position lengthDelete) -- Delete a range of text in the document.
output:DescribeKeyWordSets() -- Retrieve a '\\n' separated list of descriptions of the keyword sets understood by the current lexer - Result is NUL-terminated.
output:DescribeProperty(string name) -- Describe a property - Result is NUL-terminated.
output:DescriptionOfStyle(int style) -- Retrieve a description of a style - Result is NUL-terminated.
output:DropSelectionN(int selection) -- Drop one selection
output:EmptyUndoBuffer() -- Delete the undo history.
output:EncodedFromUTF8(string utf8) -- Translates a UTF8 string into the document encoding - Return the length of the result in bytes - On error return 0.
output:EndUndoAction() -- End a sequence of actions that is undone and redone as a unit.
output:EnsureVisible(line line) -- Ensure a particular line is visible by expanding any header line hiding it.
output:EnsureVisibleEnforcePolicy(line line) -- Ensure a particular line is visible by expanding any header line hiding it - Use the currently set visibility policy to determine which range to display.
output:ExpandChildren(line line int level) -- Expand a fold header and all children - Use the level argument instead of the line's current level.
output:FindIndicatorFlash(position start position end) -- On OS X flash a find indicator then fade out.
output:FindIndicatorHide() -- On OS X hide the find indicator.
output:FindIndicatorShow(position start position end) -- On OS X show a find indicator.
output:FoldAll(int action) -- Expand or contract all fold headers.
output:FoldChildren(line line int action) -- Expand or contract a fold header and its children.
output:FoldLine(line line int action) -- Expand or contract a fold header.
output:FreeSubStyles() -- Free allocated sub styles
output:GetCurLine() -- Retrieve the text of the line containing the caret - Returns the index of the caret on the line - Result is NUL-terminated.
output:GetDefaultFoldDisplayText() -- Get the default fold display text.
output:GetHotspotActiveBack() -- Get the back colour for active hotspots.
output:GetHotspotActiveFore() -- Get the fore colour for active hotspots.
output:GetLine(line line) -- Retrieve the contents of a line - Returns the length of the line.
output:GetSelText() -- Retrieve the selected text - Return the length of the text - Result is NUL-terminated.
output:GetText() -- Retrieve all the text in the document - Returns number of characters retrieved - Result is NUL-terminated.
output:GotoLine(line line) -- Set caret to start of a line and ensure it is visible.
output:GotoPos(position caret) -- Set caret to a position and ensure it is visible.
output:GrabFocus() -- Set the focus to this Scintilla widget.
output:HideLines(line lineStart line lineEnd) -- Make a range of lines invisible.
output:HideSelection(bool hide) -- Draw the selection either highlighted or in normal (non-highlighted) -- style.
output:IndicatorClearRange(position start position lengthClear) -- Turn a indicator off over a range.
output:IndicatorFillRange(position start position lengthFill) -- Turn a indicator on over a range.
output:InsertText(position pos string text) -- Insert string at a position.
output:IsRangeWord(position start position end) -- Is the range start..end considered a word?
output:LineScroll(position columns line lines) -- Scroll horizontally and vertically.
output:LinesJoin() -- Join the lines in the target.
output:LinesSplit(int pixelWidth) -- Split the lines in the target into lines that are less wide than pixelWidth where possible.
output:LoadLexerLibrary(string path) -- Load a lexer library (dll / so).
output:MarginTextClearAll() -- Clear the margin text on all lines
output:MarkerAddSet(line line int markerSet) -- Add a set of markers to a line.
output:MarkerDefine(int markerNumber int markerSymbol) -- Set the symbol used for a particular marker number.
output:MarkerDefinePixmap(int markerNumber string pixmap) -- Define a marker from a pixmap.
output:MarkerDefineRGBAImage(int markerNumber string pixels) -- Define a marker from RGBA data - It has the width and height from RGBAImageSetWidth/Height
output:MarkerDelete(line line int markerNumber) -- Delete a marker from a line.
output:MarkerDeleteAll(int markerNumber) -- Delete all markers with a particular number from all lines.
output:MarkerDeleteHandle(int markerHandle) -- Delete a marker.
output:MarkerEnableHighlight(bool enabled) -- Enable/disable highlight for current folding block (smallest one that contains the caret)
output:MoveCaretInsideView() -- Move the caret inside current view if it's not there already.
output:MoveSelectedLinesDown() -- Move the selected lines down one line shifting the line below before the selection
output:MoveSelectedLinesUp() -- Move the selected lines up one line shifting the line above after the selection
output:MultiEdgeAddLine(position column colour edgeColour) -- Add a new vertical edge to the view.
output:MultiEdgeClearAll() -- Clear all vertical edges.
output:MultipleSelectAddEach() -- Add each occurrence of the main selection in the target to the set of selections - If the current selection is empty then select word around caret.
output:MultipleSelectAddNext() -- Add the next occurrence of the main selection to the set of selections as main - If the current selection is empty then select word around caret.
output:NameOfStyle(int style) -- Retrieve the name of a style - Result is NUL-terminated.
output:Null() -- Null operation.
output:Paste() -- Paste the contents of the clipboard into the document replacing the selection.
output:PropertyNames() -- Retrieve a '\\n' separated list of properties understood by the current lexer - Result is NUL-terminated.
output:Redo() -- Redoes the next action on the undo history.
output:RegisterImage(int type string xpmData) -- Register an XPM image for use in autocompletion lists.
output:RegisterRGBAImage(int type string pixels) -- Register an RGBA image for use in autocompletion lists - It has the width and height from RGBAImageSetWidth/Height
output:ReleaseAllExtendedStyles() -- Release all extended (>255) -- style numbers
output:ReleaseDocument(pointer doc) -- Release a reference to the document deleting document if it fades to black.
output:ReleaseLineCharacterIndex(int lineCharacterIndex) -- Decrease use count of line character index and remove if 0.
output:ReplaceSel(string text) -- Replace the selected text with the argument text.
output:RotateSelection() -- Set the main selection to the next selection.
output:ScrollCaret() -- Ensure the caret is visible.
output:ScrollRange(position secondary position primary) -- Scroll the argument positions and the range between them into view giving priority to the primary position then the secondary position - This may be used to make a search match visible.
output:SearchAnchor() -- Sets the current caret position to be the search anchor.
output:SelectAll() -- Select all the text in the document.
output:SetCharsDefault() -- Reset the set of characters for whitespace and word characters to the defaults.
output:SetDefaultFoldDisplayText(string text) -- Set the default fold display text.
output:SetEmptySelection(position caret) -- Set caret to a position while removing any existing selection.
output:SetFoldMarginColour(bool useSetting colour back) -- Set one of the colours used as a chequerboard pattern in the fold margin
output:SetFoldMarginHiColour(bool useSetting colour fore) -- Set the other colour used as a chequerboard pattern in the fold margin
output:SetHotspotActiveBack(bool useSetting colour back) -- Set a back colour for active hotspots.
output:SetHotspotActiveFore(bool useSetting colour fore) -- Set a fore colour for active hotspots.
output:SetLengthForEncode(position bytes) -- Set the length of the utf8 argument for calling EncodedFromUTF8 - Set to -1 and the string will be measured to the first nul.
output:SetSavePoint() -- Remember the current position in the undo history as the position at which the document was saved.
output:SetSel(position anchor position caret) -- Select a range of text.
output:SetSelBack(bool useSetting colour back) -- Set the background colour of the main and additional selections and whether to use this setting.
output:SetSelFore(bool useSetting colour fore) -- Set the foreground colour of the main and additional selections and whether to use this setting.
output:SetSelection(position caret position anchor) -- Set a simple selection
output:SetStyling(position length int style) -- Change style from current styling position for length characters to a style and move the current styling position to after this newly styled segment.
output:SetStylingEx(string styles) -- Set the styles for a segment of the document.
output:SetTargetRange(position start position end) -- Sets both the start and end of the target in one call.
output:SetText(string text) -- Replace the contents of the document with the argument text.
output:SetVisiblePolicy(int visiblePolicy int visibleSlop) -- Set the way the display area is determined when a particular line is to be moved to by Find FindNext GotoLine etc.
output:SetWhitespaceBack(bool useSetting colour back) -- Set the background colour of all whitespace and whether to use this setting.
output:SetWhitespaceFore(bool useSetting colour fore) -- Set the foreground colour of all whitespace and whether to use this setting.
output:SetXCaretPolicy(int caretPolicy int caretSlop) -- Set the way the caret is kept visible when going sideways - The exclusion zone is given in pixels.
output:SetYCaretPolicy(int caretPolicy int caretSlop) -- Set the way the line the caret is on is kept visible - The exclusion zone is given in lines.
output:ShowLines(line lineStart line lineEnd) -- Make a range of lines visible.
output:StartRecord() -- Start notifying the container of all key presses and commands.
output:StartStyling(position start int unused) -- Set the current styling position to start - The unused parameter is no longer used and should be set to 0.
output:StopRecord() -- Stop notifying the container of all key presses and commands.
output:StyleClearAll() -- Clear all the styles and make equivalent to the global default style.
output:StyleResetDefault() -- Reset the default style to its state at startup
output:SwapMainAnchorCaret() -- Swap that caret and anchor of the main selection.
output:TagsOfStyle(int style) -- Retrieve a ',' separated list of style tags like "literal quoted string" - Result is NUL-terminated.
output:TargetAsUTF8() -- Returns the target converted to UTF8 - Return the length in bytes.
output:TargetFromSelection() -- Make the target range start and end be the same as the selection range start and end.
output:TargetWholeDocument() -- Sets the target to the whole document.
output:ToggleCaretSticky() -- Switch between sticky and non-sticky: meant to be bound to a key.
output:ToggleFold(line line) -- Switch a header line between expanded and contracted.
output:ToggleFoldShowText(line line string text) -- Switch a header line between expanded and contracted and show some text after the line.
output:Undo() -- Undo one action in the undo history.
output:UsePopUp(int popUpMode) -- Set whether a pop up menu is displayed automatically when the user presses the wrong mouse button on certain areas.
output:UserListShow(int listType string itemList) -- Display a list of strings and send notification when user chooses one.
output:ZoomIn() -- Magnify the displayed text by increasing the sizes by 1 point.
output:ZoomOut() -- Make the displayed text smaller by decreasing the sizes by 1 point.

string.byte()
string.char()
string.dump()
string.find()
string.format()
string.gmatch()
string.gsub()
string.len()
string.lower()
string.match()
string.pack()
string.packsize()
string.rep()
string.reverse()
string.split()
string.sub()
string.trim()
string.unpack()
string.upper()
table.concat()
table.dedup()
table.diff()
table.grab()
table.insert()
table.length()
table.match()
table.move()
table.pack()
table.remove()
table.sort()
table.stash()
table.unpack()
winapi.CP_ACP
winapi.CP_UTF16
winapi.CP_UTF8
winapi.FILE_ACTION_ADDED
winapi.FILE_ACTION_MODIFIED
winapi.FILE_ACTION_REMOVED
winapi.FILE_ACTION_RENAMED_NEW_NAME
winapi.FILE_ACTION_RENAMED_OLD_NAME
winapi.FILE_NOTIFY_CHANGE_DIR_NAME
winapi.FILE_NOTIFY_CHANGE_FILE_NAME
winapi.FILE_NOTIFY_CHANGE_LAST_WRITE
winapi.REG_BINARY
winapi.REG_DWORD
winapi.REG_EXPAND_SZ
winapi.REG_MULTI_SZ
winapi.REG_SZ
winapi.SW_HIDE
winapi.SW_MAXIMIZE
winapi.SW_MINIMIZE
winapi.SW_RESTORE
winapi.SW_SHOW
winapi.SW_SHOWNOACTIVATE
winapi.SW_SHOWNORMAL
winapi.VK_BACK
winapi.VK_DELETE
winapi.VK_DOWN
winapi.VK_END
winapi.VK_ESCAPE
winapi.VK_F10
winapi.VK_F11
winapi.VK_F12
winapi.VK_F1
winapi.VK_F2
winapi.VK_F3
winapi.VK_F4
winapi.VK_F5
winapi.VK_F6
winapi.VK_F7
winapi.VK_F8
winapi.VK_F9
winapi.VK_HOME
winapi.VK_INSERT
winapi.VK_LEFT
winapi.VK_NEXT
winapi.VK_PRIOR
winapi.VK_RETURN
winapi.VK_RIGHT
winapi.VK_SPACE
winapi.VK_TAB
winapi.VK_UP
winapi.WIN_BOTTOM
winapi.WIN_NOACTIVATE
winapi.WIN_NOMOVE
winapi.WIN_NOSIZE
winapi.WIN_NOTOPMOST
winapi.WIN_NOZORDER
winapi.WIN_SHOWWINDOW
winapi.WIN_TOP
winapi.WIN_TOPMOST
winapi.beep()
winapi.copy_file()
winapi.create_reg_key()
winapi.delete_file_or_dir()
winapi.dirs()
winapi.encode()
winapi.enum_windows()
winapi.event()
winapi.execute()
winapi.files()
winapi.find_all_windows()
winapi.find_window()
winapi.find_window_ex()
winapi.find_window_match()
winapi.get_clipboard()
winapi.get_console()
winapi.get_current_pid()
winapi.get_current_process()
winapi.get_desktop_window()
winapi.get_disk_free_space()
winapi.get_disk_network_name()
winapi.get_drive_type()
winapi.get_encoding()
winapi.get_foreground_window()
winapi.get_logical_drives()
winapi.get_processes()
winapi.make_class_matcher()
winapi.make_dir()
winapi.make_name_matcher()
winapi.make_pipe_server()
winapi.make_timer()
winapi.move_file()
winapi.mutex()
winapi.open_pipe()
winapi.open_reg_key()
winapi.open_serial()
winapi.output_debug_string()
winapi.pipe()
winapi.process_from_id()
winapi.remove_dir()
winapi.send_to_window()
winapi.set_clipboard()
winapi.set_encoding()
winapi.setenv()
winapi.shell_exec()
winapi.short_path()
winapi.show_message()
winapi.sleep()
winapi.spawn_process()
winapi.temp_name()
winapi.thread()
winapi.tile_windows()
winapi.use_gui()
winapi.utf8_expand()
winapi.wait_for_processes()
winapi.watch_for_file_changes()
winapi.window_from_handle()
